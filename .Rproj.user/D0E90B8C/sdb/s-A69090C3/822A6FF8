{
    "collab_server" : "",
    "contents" : "#-------------------------------------------------------------------------------\n#\n#' Launch FLBEIA-Shiny application\n#' \n#' FLBEIA Shiny application is an interactive interface to analyze the biological, economic and social indicators obtained through FLBEIA simulation model. It provides lots of graphics at scenario, stock, fleet and metier level to facilitate the analysis of the results and the comparison among scenarios.\n#'\n#' @param flbeiaObjs A named list with a set of FLBEIA outputs, each element of the list corresponding with one scenario. The names of the list will be used to name the scenarios.\n#' @param RefPts A data frame with columns, 'stock', 'scenario', 'indicator', and 'value', with the values of 'Bmsy','Fmsy', 'Bpa', 'Blim', 'Fpa' and 'Flim' per stock and scenario. If the value for certain stock and/or scenario is not available NA should be used. If the data.frame is not available in the function call the data frame is created internally with NA for all the cases.   \n#' @param bio The output of bioSumQ function.\n#' @param flt The output of fltSumQ function.\n#' @param fltStk The output of fltStkSumQ function.\n#' @param mt The output of mtSumQ function.\n#' @param mtStk The output of mtStkSumQ function.\n#' @param adv The output of advSumQ function.\n#' @param risk The output of riskSum function.\n#' @param years The years to be included in the application.\n#' @param calculate_npv logical, should the npv be calculated?\n#' @param npv The output of npvQ function.\n#' @param npv.y0 The first year in the calculation of net present value (npv).\n#' @param npv.yrs The range of years to be considered in the npv calculation.\n#' \n#' @return The function launch a Shiny-App with to analyse the results of FLBEIA in an interactive way.\n#' \n#' @details If flbeiaObjs is provided the most of the other arguments (from bio,..., risk and npv) are not needed,  they are internally calculated. If it is not provided, it is neccesary to provide the rest arguments.\n#' \n#' @examples\n#'\\dontrun{\n#' library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64\n#' \n#' \n#' #----------------------------------------------------------------\n#' # Example with the summary indicators stored in data.frame-s\n#' #----------------------------------------------------------------\n#' \n#' data(FLBEIAShiny)\n#' \n#' \n#' flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ, \n#'           fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,\n#'           years = as.character(2010:2024), \n#'           calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL) \n#' \n#'\n#' \n#' #----------------------------------------------------------------\n#' # Run FLBEIA first and then use the output to launch flbeiaApp.\n#' # In this case we use the output of FLBEIA directly.\n#' #----------------------------------------------------------------\n#' library(FLBEIA)\n#' data(oneIt)\n#' \n#' one_sc1 <- FLBEIA(biols = oneItBio,\n#'                     SRs = oneItSR,\n#'                     BDs = NULL,\n#'                  fleets = oneItFl,\n#'                  covars = oneItCv,\n#'                 indices = NULL,\n#'                  advice = oneItAdv,\n#'               main.ctrl = oneItMainC,\n#'              biols.ctrl = oneItBioC,\n#'             fleets.ctrl = oneItFlC,\n#'             covars.ctrl = oneItCvC,\n#'                obs.ctrl = oneItObsC,\n#'             assess.ctrl = oneItAssC,\n#'             advice.ctrl = oneItAdvC)\n#' \n#' # We change the target reference point in HCR and run a second scenario\n#' \n#'  oneItAdvC$stk1$ref.pts['Fmsy',] <- 0.2\n#' \n#' one_sc2 <- FLBEIA(biols = oneItBio,\n#'                     SRs = oneItSR,\n#'                     BDs = NULL,\n#'                  fleets = oneItFl,\n#'                  covars = oneItCv,\n#'                 indices = NULL,\n#'                  advice = oneItAdv,\n#'               main.ctrl = oneItMainC,\n#'              biols.ctrl = oneItBioC,\n#'             fleets.ctrl = oneItFlC,\n#'             covars.ctrl = oneItCvC,\n#'                obs.ctrl = oneItObsC,\n#'             assess.ctrl = oneItAssC,\n#'             advice.ctrl = oneItAdvC)\n#' \n#' scnms <- c('Ftarget_Fmsy', 'Ftarget_0.15')\n#' stknms <- 'stk1'\n#' RefPts <- expand.grid(indicator=c(\"Bmsy\", \"Fmsy\", \"Bpa\", \"Blim\", \"Fpa\", \"Flim\"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]\n#' RefPts$value <- c(c(800, 0.11, 800, 550, 0.25, 0.50),  c(800, 0.2, 800, 550, 0.25, 0.50))\n#' \n#' flbeiaObjs <- list(Ftarget_Fmsy = one_sc1, Ftarget_0.15 = one_sc2)\n#' \n#' \n#' flbeiaApp(flbeiaObjs = flbeiaObjs, RefPts = RefPts, years = ac(2000:2025), calculate_npv = TRUE, npv.y0 = '2012', npv.yrs = ac(2013:2025)) \n#' \n#' }   \n    \n    \n    \n    \n    \n\n\nflbeiaApp <- function (flbeiaObjs = NULL, RefPts = NULL, bio = NULL, flt = NULL, \n                     fltStk = NULL, mt = NULL, mtStk = NULL, adv = NULL, risk = NULL, \n                   years = dimnames(flbeiaObjs[[1]][[1]][[1]]@n)[[2]], calculate_npv = NULL, \n                   npv = NULL, npv.y0 = NULL, npv.yrs = NULL) {\n  require(FLBEIA)\n  require(kobe)\n  require(ggplot2)\n  require(schoolmath)\n\n npv2 <- npv\n\n  if(missing(RefPts)){\n\n    if(missing(flbeiaObjs)){\n      stknms <- unique(bio$stock)\n      scnms <- unique(bio$scenario)\n    }\n    else{\n      stknms <- names(flbeiaObjs[[1]]$biols)\n      scnms <- names(flbeiaObjs)\n    }\n    reference_points <- data.frame(stock = rep(stknms, each = 6*length(scnms)),\n                                   scenario = rep(rep(scnms, each = 6),length(stknms)),\n                                   indicator = rep(c('Bmsy','Fmsy', 'Bpa', 'Blim', 'Fpa', 'Flim'), length(stknms)*length(scnms)),\n                                   value = NA)\n\n    }\n  else{\n    reference_points <- RefPts\n  }\n\n  if(!is.null(flbeiaObjs)){\n    if(is.null(names(flbeiaObjs))){\n        scenarios <- 1:length(flbeiaObjs)\n    }else{\n        scenarios <- names(flbeiaObjs)\n    }\n    bio   <- NULL\n    flt   <- NULL\n    fltStk <- NULL\n    mt     <- NULL\n    mtStk  <- NULL\n    adv    <- NULL\n    risk    <- NULL\n    npv2 <- NULL\n\n    for(sc in names(flbeiaObjs)){\n      print(sc)\n      flbeiaObj <- flbeiaObjs[[sc]]\n      bio    <- rbind(bio,bioSumQ(bioSum(flbeiaObj, scenario = sc, years = years)))\n      flt    <- rbind(flt,fltSumQ(fltSum(flbeiaObj, scenario = sc, years = years)))\n      fltStk <- rbind(fltStk,fltStkSumQ(fltStkSum(flbeiaObj, scenario = sc, years = years)))\n      mt     <- rbind(mt,mtSumQ(mtSum(flbeiaObj, scenario = sc, years = years)))\n      mtStk  <- rbind(mtStk,mtStkSumQ(mtStkSum(flbeiaObj, scenario = sc, years = years)))\n      adv    <- rbind(adv,advSumQ(advSum(flbeiaObj, scenario = sc, years = years)))\n\n      Bpa <- subset(reference_points, indicator=='Bpa' & scenario == sc)[,'value']\n      names(Bpa) <- subset(reference_points, indicator=='Bpa' & scenario == sc)[,'stock']\n      Blim <- subset(reference_points, indicator=='Blim' & scenario == sc)[,'value']\n      names(Blim) <- subset(reference_points, indicator=='Blim' & scenario == sc)[,'stock']\n      risk   <- rbind(risk,riskSum(flbeiaObj, scenario = sc, Bpa = Bpa, Blim = Blim, Prflim = 0, years = years))\n      if(calculate_npv == TRUE) npv2    <- rbind(npv2,npvQ(npv(flbeiaObj, scenario = sc, y0 = npv.y0, years = npv.yrs )))\n    }}\n  if(calculate_npv == FALSE & !is.null(npv)) npv2 <- npv\n\n  t0 <- subset(bio, indicator == 'f')\n  t1 <- subset(bio, indicator == 'ssb')\n\n  data <- cbind(t0[,c(1,3:4,6)], t1[,6])\n  names(data) <- c('unit', 'year', 'scenario', 'q50.f', 'q50.ssb')\n  data <- cbind(data, Bmsy = NA,Fmsy = NA)\n\n  for(st in unique(data$unit)){\n    for(sc in unique(data$scenario)){\n\n      bmsy <- subset(reference_points, stock == st & scenario == sc & indicator == 'Bmsy')\n      fmsy <- subset(reference_points, stock == st & scenario == sc & indicator == 'Fmsy')\n\n      data[data$unit == st & data$scenario == sc, 'Bmsy'] <- bmsy$value\n      data[data$unit == st & data$scenario == sc, 'Fmsy'] <- fmsy$value\n    }}\n  data$stock <- data$q50.ssb/data$Bmsy\n  data$harvest <- data$q50.f/data$Fmsy\n\n   assign(\"bio\",    bio,envir = globalenv())\n   assign(\"flt\",    flt,envir = globalenv())\n   assign(\"fltStk\", fltStk,envir = globalenv())\n   assign(\"mt\",     mt,envir = globalenv())\n   assign(\"mtStk\",  mtStk,envir = globalenv())\n   assign(\"adv\",    adv,envir = globalenv())\n   assign(\"risk\",   risk,envir = globalenv())\n   assign(\"npv2\",   npv2,envir = globalenv())\n   assign(\"npv\",   npv2,envir = globalenv())\n   assign(\"data\",   data,envir = globalenv())\n   assign(\"reference_points\",   reference_points,envir = globalenv())\n\n # load('FLBEIAApp.Rdata')\n  shiny::runApp(system.file('flbeiaApp', package='FLBEIAShiny'), launch.browser = TRUE)\n\n  }\n\n",
    "created" : 1542285830541.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1024739012",
    "id" : "822A6FF8",
    "lastKnownWriteTime" : 1543568540,
    "last_content_update" : 1543568540,
    "path" : "~/FLR/FLBEIA/shiny/FLBEIAShiny/R/flbeiaApp.R",
    "project_path" : "R/flbeiaApp.R",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 17,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}