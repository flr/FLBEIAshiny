library(Shiny)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
library(Shiny)
library(shiny)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
plotOutput("result")
)
server <- function(input, output) {
output$result<-renderPlot({
plot(Sepal.Length ~ Sepal.Width,
col = Species, data = iris)
}, width = 500, height = 500)
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
#list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found", deleteFile=FALSE)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
png(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris, width =300, height=600)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
tiff(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris, width =300, height=600)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".png")
tiff(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".jpg")
jpg(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext=".tiff")
tiff(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
imageOutput("result")
)
server <- function(input, output) {
output$result <- renderImage({
outfile <- tempfile(fileext="grafico.tiff")
tiff(outfile)
plot(Sepal.Length ~ Sepal.Width, col = Species, data = iris)
dev.off()
list(src = outfile, alt = "Image not found")
})
}
shinyApp(ui = ui, server = server)
shinyUI(fluidPage(
titlePanel("Hello Shiny!"),
fluidRow(
column(4,
wellPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)
)
),
column(8,
plotOutput("distPlot")
)
)
))
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 3, offset = 2,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 8, offset = 2,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 8,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 8,
"3 offset 2"
)
),
fluidRow(
column(width = 4,
"4"
),
column(width = 8,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
ui <- fluidPage(
title = "Hello Shiny!",
fluidRow(
column(width = 4,
"4"
),
column(width = 8,
"3 offset 2"
)
),
fluidRow(
column(width = 4,
"4"
),
column(width = 4,
"3 offset 2"
),
column(width = 4,
"3 offset 2"
)
)
)
shinyApp(ui, server = function(input, output) { })
rug
?rug
setwd("C:/use/Maria/2016/IM14REDSEATRAP/shiny/redseatr")
library (shiny)
library (rJava)
runApp()
setwd("C:/use/Maria/2016/IM14REDSEATRAP/shiny/redseatr")
runApp()
library(shiny)
runApp()
install.packages("Hmisc", lib="C:/Program Files/R/R-3.5.3/library")
runApp()
install.packages("xlsx", lib="C:/Program Files/R/R-3.5.3/library")
runApp()
runApp()
runApp()
runApp()
setwd("~/Maria/2019/GITHUB/FLBEIAshiny/inst/flbeiaApp")
runApp()
