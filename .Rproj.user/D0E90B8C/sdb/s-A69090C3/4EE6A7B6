{
    "collab_server" : "",
    "contents" : "#------------------------------------------------------------------------------#\n#    Auxiliary functions to summarize the results\n#\n# F_flbeia(obj)\n# SSB_flbeia(obj)\n# B_flbeia(obj)\n# R_flbeia(obj)\n# C_flbeia(obj);  L_flbeia(obj); D_flbeia(obj)\n# summary_flbeia(obj)\n#  obj = FLBEIA output.\n#  \n#   \n# Dorleta Garcia\n# Created: 30/01/2011 20:50:27 \n# Changed: 30/01/2011 20:50:32\n#------------------------------------------------------------------------------#\n\n#' @title Biological summary functions\n#' \n#' @description These functions return the biomass (B), fishing mortality (F),  spawning stock biomass (SSB), recruitment (R), catches (C), landings (L) and discards (D) indicators. \n#' \n#' @param  obj The output of the FLBEIA function.\n#' @param  years The  years for which the indicators are extracted.\n#' \n#' @return B_flbeia, F_flbeia... return an array with three dimensions (stock, year and iter).\n#' The summary_flbeia function returns an array with 4 dimensions (stock, year, iter, indicator) with the value of all the indicators. \n#'         \n#'\n#' @details \n#' \n#' \\itemize{\n#'       \\item{B_flbeia}{ this function computes SSB.}\n#'       \\item{F_flbeia}{ ithis function computes fishing mortiality.}\n#'       \\item{SSB_flbeia}{ this function computes spawning stock biomass by species.}\n#'       \\item{R_flbeia}{ this function computes recruitment by stock. If the stock is defined by age this function the recruiment is computed. ;\n#'                        If the stock is follows a biomass dynamics, this function gives the growth.}\n#'       \\item{C_flbeia}{ this function computes catches by fleets and stock.} \n#'       \\item{L_flbeia}{ this function computes landings by fleets and stock.}\n#'       \\item{D_flbeia}{ ithis function computes the discards by fleets and stock.}\n#'      }     \n\n\n#------------------------------------------------------------------------------#\n# F_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n# @export\n\n#' @rdname F_flbeia\nF_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n    \n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n    \n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){\n        # harvest: * if age structured calculate it from 'n'.\n        #          * if biomass dyn => assume C = q*E*B => C = F*B and F = C/B.\n        na <- dim(obj$biols[[stk]]@n)[1]\n        \n        if(na == 1){\n            # Catch:\n            catch <- apply(catchStock(obj$fleets, stk),c(2,6), sum)[,years,drop = TRUE] # [ny,it]\n            B     <- (obj$biols[[stk]]@n*obj$biols[[stk]]@wt)[,years,,1,drop= TRUE] # [ny, it] , 1st season biomass\n            res[stk,,] <- (catch/B)\n        }\n        else{ \n            fbar_age <- ac(obj$biols[[stk]]@range[c('minfbar')]:obj$biols[[stk]]@range[c('maxfbar')])\n            \n            Dnms <- list(age = fbar_age, year = yrnms, iter = 1:it)\n            aux  <- array(dim = c(length(fbar_age), ny,it), dimnames = Dnms)           \n            \n            n.  <- array(unitSums(obj$biols[[stk]]@n)[fbar_age,years,,1,drop=T], dim = c(length(fbar_age),ny,it), dimnames = Dnms)\n            m.  <- array(seasonSums(unitMeans(obj$biols[[stk]]@m))[fbar_age,years,drop=T], dim = c(length(fbar_age),ny,it), dimnames = Dnms)\n            c.  <- array(apply(catchStock(obj$fleets, stk),c(1:2,6), sum)[fbar_age,years, drop = TRUE], dim = c(length(fbar_age),ny,it), dimnames = Dnms)\n        \n            fobj <- function(f,n,m,c){ return( f/(f+m)* (1-exp(-(f+m)))*n -c)}\n        \n            for(y in yrnms){\n                for(a in fbar_age){\n                    for(i in 1:it){\n                        if(n.[a,y,i] == 0) aux[a,y,i] <- 0\n                        else{\n                           xx <- try(uniroot(fobj, lower = 0, upper = 1e6, n = n.[a,y,i], m=m.[a,y,i], c = c.[a,y,i])$root, silent = TRUE)\n                           aux[a,y,i] <- ifelse(class(xx) == 'try-error', NA, xx)\n                        }      \n            }}}\n           res[stk,,] <- apply(aux,2:3,mean) \n        }\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# SSB_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nSSB_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n\n    \n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # SSB in spawning season\n      # spawning season: first season with fraction of natural mortality before spawning < 1\n      spwn.sson <- 1\n      si <- 0\n      while( (si-spwn.sson)!=0) {\n        si <- spwn.sson\n        spwn.sson  <- ifelse( sum(spwn(obj$biols[[stk]])[ , , 1, spwn.sson, drop = T]<1,na.rm=T)==0, spwn.sson+1, spwn.sson)\n        d  <- si-spwn.sson\n      }\n      \n      res[stk,,] <- apply(unitSums(n(obj$biols[[stk]])*wt(obj$biols[[stk]])*fec(obj$biols[[stk]])*mat(obj$biols[[stk]])*\n                                     exp(-spwn(obj$biols[[stk]])*m(obj$biols[[stk]])))[,years,,spwn.sson], c(2,6), sum, na.rm = TRUE)[drop=T]\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# B_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nB_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n\n    \n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # B 1st season\n        res[stk,,] <- apply(unitSums(obj$biols[[stk]]@n*obj$biols[[stk]]@wt)[,years,,1], c(2,6), sum, na.rm = TRUE)[drop=T]\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# R_flbeia(obj) :: res[stocks, years, it] \n# If age struc => recruitment.\n# If biodyn    => growth.\n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nR_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n\n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # \n        na <- dim(obj$biols[[stk]]@n)[1]\n        # Recruitment season: first season with individuals at lower age class (Nage0>0)\n        rec.sson <- 1\n        si <- 0\n        while( (si-rec.sson)!=0) { \n          si <- rec.sson\n          rec.sson  <- ifelse( sum(obj$biols[[stk]]@n[1, , 1, rec.sson, drop = T]!=0,na.rm=T)==0, rec.sson+1, rec.sson)\n          d  <- si-rec.sson \n        }\n        if(na > 1){\n            res[stk,,] <- obj$biols[[stk]]@n[1,years,1,rec.sson,drop=T]\n            if(dim(obj$biols[[stk]]@n)[3]>1){\n                for(ss in (rec.sson+1):dim(obj$biols[[stk]]@n)[3]) res[stk,,] <- res[stk,,] + obj$biols[[stk]]@n[1,years,ss,ss,drop=T]\n            }\n        }else{\n            catch <- matrix(apply(catchStock(obj$fleets, stk),c(2,6), sum)[,years,drop = TRUE],ny,it) # [ny,it]\n            B     <- matrix((obj$biols[[stk]]@n*obj$biols[[stk]]@wt)[,years,,1,drop= TRUE],ny,it) # [ny, it] , 1st season biomass\n            res[stk,-ny,] <- B[-1,] - B[-ny,] + catch[-ny,]\n            \n        }\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# C_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nC_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n    \n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # B 1st season\n        res[stk,,] <- apply(catchWStock(obj$fleets, stk),c(2,6), sum)[,years,drop = TRUE] # [ny,it]\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# L_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nL_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n\n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # B 1st season\n        res[stk,,] <- apply(landWStock(obj$fleets, stk),c(2,6), sum)[,years,drop = TRUE] # [ny,it]\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# D_flbeia(obj) :: res[stocks, years, it] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nD_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n    stknms <- names(obj$biols)\n\n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years)\n    yrnms  <- years\n\n    stknms <- names(obj$biols)\n\n    res <- array(dim = c(length(stknms), ny,it), dimnames = list(stock = stknms, year = yrnms))\n    \n    for(stk in stknms){ # B 1st season\n        res[stk,,] <- apply(discWStock(obj$fleets, stk),c(2,6), sum)[,years,drop = TRUE] # [ny,it]\n    }\n    return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# summary_flbeia(obj) :: res[stocks, years, it, indicators] \n#------------------------------------------------------------------------------#\n\n#' @rdname F_flbeia\nsummary_flbeia <- function(obj, years = dimnames(obj$biols[[1]]@n)$year){\n\n    stknms <- names(obj$biols)\n    \n    it     <- dim(obj$biols[[1]]@n)[6]\n    ny     <- length(years) # dim(obj$biols[[1]]@n)[2]\n    yrnms  <- years # dimnames(obj$biols[[1]]@n)[[2]]\n    \n    res <- array(dim = c(length(stknms), ny,it, 7), dimnames = list(stock = stknms, year = yrnms, iter = 1:it, \n                                                      indicators = c('rec', 'ssb', 'f', 'biomass', 'catch', 'landings', 'discards')))\n    \n    res[,,,1] <- R_flbeia(obj,years)\n    res[,,,2] <- SSB_flbeia(obj,years)\n    res[,,,3] <- F_flbeia(obj,years)\n    res[,,,4] <- B_flbeia(obj,years)\n    res[,,,5] <- C_flbeia(obj,years)\n    res[,,,6] <- L_flbeia(obj,years)\n    res[,,,7] <- D_flbeia(obj,years)\n\n    return(res)\n    \n}\n\n#------------------------------------------------------------------------------#\n# summary_flbeia(obj) :: res[stocks, years, it, indicators] \n#------------------------------------------------------------------------------#\n#' Summary of the FLBEIA output \n#' \n#' Summarize the results of the simulation in data frames.\n#'\n#' @details \n#' \n#'\\itemize{\n#'      \\item{advSum, advSumQ:} Data frame with the indicators related with the management advice (TAC). The indicators are:\n#'              \"catch\", \"discards\", \"discRat\",  \"landings\", \"quotaUpt\" and \"tac\".              \n#'      \\item{bioSum, bioSumQ:} Data frame with the biological indicators. The indicators are: \n#'              \"biomass\", \"catch\", \"catch.iyv\", \"discards\",  \"disc.iyv\",  \"f\", \"landings\",  \"land.iyv\",  \"rec\" and      \"ssb\".\n#'      \\item{fltSum, fltSumQ:} Data frame with the indicators at fleet level. The indicators are:\n#'              \"capacity\", \"catch\", \"costs\", \"discards\", \"discRat\", \"effort\",       \n#'              \"fcosts\", \"gva\", \"grossValue\", \"landings\", \"fep\", \"nVessels\", \"price\", \"grossSurplus\",\n#'              \"quotaUpt\", \"salaries\", \"vcosts\" and \"profitability\".\n#'      \\item{fltStkSum, fltStkSumQ:} Data frame with the indicators at fleet and stock level. The indicators are:\n#'              \"landings\", \"discards\", \"catch\", \"price\",  \"quotaUpt\", \"tacshare\", \"discRat\" and  \"quota\".   \n#'      \\item{npv:} A data frame with the net present value per fleet over the selected range of years.\n#'      \\item{mtSum, mtSumQ:} Data frame with the indicators at metier level. The indicators are:\n#'              \"effshare\", \"effort\", \"grossValue\" and \"vcost\".   \n#'      \\item{mtStkSum, mtStkSumQ:} Data frame with the indicators at fleet and metier level. The indicators are:\n#'              \"catch\",  \"discards\", \"discRat\", \"landings\" and \"price\".\n#'      \\item{riskSum:} A data frame with the risk indicators. The indicators are:\n#'              \"pBlim\", \"pBpa\" and \"pPrflim\".\n#'          \n#'      \n#'      \n#'      \\item{vesselSum, vesselSumQ:} Data frame with the indicators at vessel level. The indicators are:\n#'               \"catch\", \"costs\", \"discards\", \"discRat\", \"effort\",       \n#'              \"fcosts\", \"gva\", \"grossValue\", \"landings\", \"fep\",  \"price\", \"grossSurplus\",\n#'              \"quotaUpt\", \"salaries\", \"vcosts\" and \"profitability\".\n#'      \\item{vesselStkSum, vesselStkSumQ:} Data frame with the indicators at vessel and stock level. The indicators are:\n#'              \"landings\", \"discards\", \"catch\", \"price\",  \"quotaUpt\", \"tacshare\", \"discRat\" and  \"quota\".   \n#'      \\item{summary_flbeia:} An array with four dimensions: stock, year, iteration, \n#'      indicator. The indicators are: recruitment, ssb, f, biomass, catch, landings and discards.\n#'      \\item{ecoSum_damara:} ecoSum built in the framework of Damara project.\n#'}\n#'      \n#' The data frames       \n#'\n#'\n#' @return The data frames can be of wide or long format. In long format all the indicators are in the same column.\n#'  There is one column, indicator, for the name of the indicator and a second one value for the numeric value of the indicator.\n#'  In the wide format each of the indicators correspond with one column in the data frame. \n#'  The long format it is recommendable to work with ggplot2 functions for example while the wide format \n#'  it is more efficient for memory allocation and speed of computations. \n#'  \n#'  The quantile version of the summaries, fooQ, returns the quantiles of the indicators. \n#'  In the long format as many columns as elements in prob are created. The name of the columns are\n#'  the elements in prob preceded by a q. In the wide format for each of the indicators as many \n#'  columns as elements in prob are created. The names of the colums are the elements in prob preceded by\n#'  q_name_of_the_indicator. \n#'\n#' @inheritParams FLBEIA\n#' @inheritParams F_flbeia\n#' @param flnms Names of the fleet for which the indicators will be calculated.\n#' @param stknms Names of the stock for which the indicators will be calculated.\n#' @param years the names of the years for which the indicators will be calculated. \n#' @param long logical. The data frame should be constructed using long or wide format? Default TRUE.\n#' @param byyear logical. The indicators should be provided at season or year level? Default TRUE.\n#' @param prob a numeric vector with the probabilities used to calculate the quantiles. \n#' @param scenario a character string with the name of the scenario corresponding with obj. Default bc.\n#' @param Bpa named numeric vector with one element per stock in stknms. The precautionary approach stock spawning biomass used in riskSum function to calculate biological risk yearly.\n#' @param Blim named numeric vector with one element per stock in stknms. The limit stock spawning biomass used in riskSum function to calculate biological risk yearly.\n#' @param Prflim named numeric vector with one element per fleet in flnms. The limit profit level used in riskSum function to calculate economic risk yearly.\n\n#' @examples\n#'\\dontrun{\n#'\n#' library(FLBEIA)\n#'\n#' # Apply the summary functions to the examples runs in FLBEIA help page.\n#' # Test the different arguments in summary function.\n#' \n#' data(res_flbeia)\n# \n#' #------------------------------------------------\n#' # Example One: One stock, one fleet, one iter.\n#' #------------------------------------------------\n#' oneRes_bio    <- bioSum(oneRes)\n#' oneRes_flt    <- fltSum(oneRes)\n#' oneRes_fltStk <- fltStkSum(oneRes)\n#' oneRes_mt     <- mtSum(oneRes)\n#' oneRes_mtStk  <- mtStkSum(oneRes)\n#' oneRes_adv    <- advSum(oneRes)\n#' \n#' head(oneRes_bio)\n#' head(oneRes_flt)\n#' head(oneRes_fltStk)\n#' head(oneRes_mt)\n#' head(oneRes_mtStk)\n#' head(oneRes_adv)\n#' \n#' oneRes_bioQ    <- bioSumQ(oneRes_bio)\n#' oneRes_fltQ    <- fltSumQ(oneRes_flt)\n#' oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)\n#' oneRes_mtQ     <- mtSumQ(oneRes_mt)\n#' oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)\n#' oneRes_advQ    <- advSumQ(oneRes_adv)\n#' \n#' head(oneRes_bioQ)\n#' head(oneRes_fltQ)\n#' head(oneRes_fltStkQ)\n#' head(oneRes_mtQ)\n#' head(oneRes_mtStkQ)\n#' head(oneRes_advQ)\n#' \n#' # Wide format\n#' oneRes_bio    <- bioSum(oneRes, long = FALSE, years = ac(2016:2020))\n#' oneRes_flt    <- fltSum(oneRes, long = FALSE, years = ac(2016:2020))\n#' oneRes_fltStk <- fltStkSum(oneRes, long = FALSE, years = ac(2016:2020))\n#' oneRes_mt     <- mtSum(oneRes, long = FALSE, years = ac(2016:2020))\n#' oneRes_mtStk  <- mtStkSum(oneRes, long = FALSE, years = ac(2016:2020))\n#' oneRes_adv    <- advSum(oneRes, long = FALSE, years = ac(2016:2020))\n#'\n#' head(oneRes_bio)\n#' head(oneRes_flt)\n#' head(oneRes_fltStk)\n#' head(oneRes_mt)\n#' head(oneRes_mtStk)\n#' head(oneRes_adv)\n#' \n#' oneRes_bioQ    <- bioSumQ(oneRes_bio)\n#' oneRes_fltQ    <- fltSumQ(oneRes_flt)\n#' oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)\n#' oneRes_mtQ     <- mtSumQ(oneRes_mt)\n#' oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)\n#' oneRes_advQ    <- advSumQ(oneRes_adv)\n#' \n#' head(oneRes_bio)\n#' head(oneRes_flt)\n#' head(oneRes_fltStk)\n#' head(oneRes_mt)\n#' head(oneRes_mtStk)\n#' head(oneRes_adv)\n#' \n#' # Wide format with seasonal disaggregation. No seasonal disagregation available for bio and adv summaries.\n#' \n#' oneRes_bio    <- bioSum(oneRes, long = FALSE) # Biol summary is only by year.\n#' oneRes_flt    <- fltSum(oneRes, long = FALSE, byyear = FALSE)\n#' oneRes_fltStk <- fltStkSum(oneRes, long = FALSE, byyear = FALSE)\n#' oneRes_mt     <- mtSum(oneRes, long = FALSE, byyear = FALSE)\n#' oneRes_mtStk  <- mtStkSum(oneRes, long = FALSE, byyear = FALSE)\n#' oneRes_adv    <- advSum(oneRes, long = FALSE) # Advice summary is only by year.\n#' \n#' oneRes_bioQ    <- bioSumQ(oneRes_bio)\n#' oneRes_fltQ    <- fltSumQ(oneRes_flt)\n#' oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)\n#' oneRes_mtQ     <- mtSumQ(oneRes_mt)\n#' oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)\n#' oneRes_advQ    <- advSumQ(oneRes_adv)\n# \n#  # Long format and seasonal\n#' oneRes_bio    <- bioSum(oneRes, long = TRUE) # Biol summary is only by year.\n#' oneRes_flt    <- fltSum(oneRes, long = TRUE, byyear = FALSE)\n#' oneRes_fltStk <- fltStkSum(oneRes, long = TRUE, byyear = FALSE)\n#' oneRes_mt     <- mtSum(oneRes, long = TRUE, byyear = FALSE)\n#' oneRes_mtStk  <- mtStkSum(oneRes, long = TRUE, byyear = FALSE)\n#' oneRes_adv    <- advSum(oneRes, long = TRUE) # Advice summary is only by year.\n#' \n#' oneRes_bioQ    <- bioSumQ(oneRes_bio)\n#' oneRes_fltQ    <- fltSumQ(oneRes_flt)\n#' oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)\n#' oneRes_mtQ     <- mtSumQ(oneRes_mt)\n#' oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)\n#' oneRes_advQ    <- advSumQ(oneRes_adv)\n#' \n#' \n#' #------------------------------------------------\n#' # Example OneIt: As one but with iterations.\n#' #------------------------------------------------\n#' oneItRes_bio    <- bioSum(oneItRes, scenario = 'with_iters')\n#' oneItRes_flt    <- fltSum(oneItRes, scenario = 'with_iters')\n#' oneItRes_fltStk <- fltStkSum(oneItRes, scenario = 'with_iters')\n#' oneItRes_mt     <- mtSum(oneItRes, scenario = 'with_iters')\n#' oneItRes_mtStk  <- mtStkSum(oneItRes, scenario = 'with_iters')\n#' oneItRes_adv    <- advSum(oneItRes, scenario = 'with_iters')\n#' \n#' oneItRes_bioQ    <- bioSumQ(oneItRes_bio)\n#' oneItRes_fltQ    <- fltSumQ(oneItRes_flt)\n#' oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)\n#' oneItRes_mtQ     <- mtSumQ(oneItRes_mt)\n#' oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)\n#' oneItRes_advQ    <- advSumQ(oneItRes_adv)\n#' \n#' oneItRes_bio    <- bioSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' oneItRes_flt    <- fltSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' oneItRes_fltStk <- fltStkSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' oneItRes_mt     <- mtSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' oneItRes_mtStk  <- mtStkSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' oneItRes_adv    <- advSum(oneItRes, long = FALSE, years = ac(2016:2020))\n#' \n#' \n#' oneItRes_bioQ    <- bioSumQ(oneItRes_bio)\n#' oneItRes_fltQ    <- fltSumQ(oneItRes_flt)\n#' oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)\n#' oneItRes_mtQ     <- mtSumQ(oneItRes_mt)\n#' oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)\n#' oneItRes_advQ    <- advSumQ(oneItRes_adv)\n#' \n#' \n#' oneItRes_bio    <- bioSum(oneItRes, long = FALSE) # Biol summary is only by year.\n#' oneItRes_flt    <- fltSum(oneItRes, long = FALSE, byyear = FALSE)\n#' oneItRes_fltStk <- fltStkSum(oneItRes, long = FALSE, byyear = FALSE)\n#' oneItRes_mt     <- mtSum(oneItRes, long = FALSE, byyear = FALSE)\n#' oneItRes_mtStk  <- mtStkSum(oneItRes, long = FALSE, byyear = FALSE)\n#' oneItRes_adv    <- advSum(oneItRes, long = FALSE) # Advice summary is only by year.\n#' \n#' oneItRes_bioQ    <- bioSumQ(oneItRes_bio)\n#' oneItRes_fltQ    <- fltSumQ(oneItRes_flt)\n#' oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)\n#' oneItRes_mtQ     <- mtSumQ(oneItRes_mt)\n#' oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)\n#' oneItRes_advQ    <- advSumQ(oneItRes_adv)\n#' \n#' \n#' oneItRes_bio    <- bioSum(oneItRes, long = TRUE) # Biol summary is only by year.\n#' oneItRes_flt    <- fltSum(oneItRes, long = TRUE, byyear = FALSE)\n#' oneItRes_fltStk <- fltStkSum(oneItRes, long = TRUE, byyear = FALSE)\n#' oneItRes_mt     <- mtSum(oneItRes, long = TRUE, byyear = FALSE)\n#' oneItRes_mtStk  <- mtStkSum(oneItRes, long = TRUE, byyear = FALSE)\n#' oneItRes_adv    <- advSum(oneItRes, long = TRUE) # Advice summary is only by year.\n#' \n#' oneItRes_bioQ    <- bioSumQ(oneItRes_bio)\n#' oneItRes_fltQ    <- fltSumQ(oneItRes_flt)\n#' oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)\n#' oneItRes_mtQ     <- mtSumQ(oneItRes_mt)\n#' oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)\n#' oneItRes_advQ    <- advSumQ(oneItRes_adv)\n#' \n#' oneItRes_risk <- riskSum(oneItRes, Bpa = c(stk1= 900), Blim = c(stk1 = 600), Prflim = c(fl1 = 0), scenario = 'alternative')\n#' \n#' oneItRes_npv  <- npv(oneItRes, y0 = '2014')\n#'\n#' #------------------------------------------------\n#' # Example Multi: Two stock, two fleet, four iters.\n#' #------------------------------------------------\n#' multiRes_bio    <- bioSum(multiRes)\n#' multiRes_flt    <- fltSum(multiRes)\n#' multiRes_fltStk <- fltStkSum(multiRes)\n#' multiRes_mt     <- mtSum(multiRes)\n#' multiRes_mtStk  <- mtStkSum(multiRes)\n#' multiRes_adv    <- advSum(multiRes)\n#' \n#' multiRes_bioQ    <- bioSumQ(multiRes_bio)\n#' multiRes_fltQ    <- fltSumQ(multiRes_flt)\n#' multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)\n#' multiRes_mtQ     <- mtSumQ(multiRes_mt)\n#' multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)\n#' multiRes_advQ    <- advSumQ(multiRes_adv)\n#' \n#' multiRes_bio    <- bioSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' multiRes_flt    <- fltSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' multiRes_fltStk <- fltStkSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' multiRes_mt     <- mtSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' multiRes_mtStk  <- mtStkSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' multiRes_adv    <- advSum(multiRes, long = FALSE, years = ac(2016:2020))\n#' \n#' \n#' multiRes_bioQ    <- bioSumQ(multiRes_bio)\n#' multiRes_fltQ    <- fltSumQ(multiRes_flt)\n#' multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)\n#' multiRes_mtQ     <- mtSumQ(multiRes_mt)\n#' multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)\n#' multiRes_advQ    <- advSumQ(multiRes_adv)\n#' \n#' \n#' multiRes_bio    <- bioSum(multiRes, long = FALSE) # Biol summary is only by year.\n#' multiRes_flt    <- fltSum(multiRes, long = FALSE, byyear = FALSE)\n#' multiRes_fltStk <- fltStkSum(multiRes, long = FALSE, byyear = FALSE)\n#' multiRes_mt     <- mtSum(multiRes, long = FALSE, byyear = FALSE)\n#' multiRes_mtStk  <- mtStkSum(multiRes, long = FALSE, byyear = FALSE)\n#' multiRes_adv    <- advSum(multiRes, long = FALSE) # Advice summary is only by year.\n#' \n#' multiRes_bioQ    <- bioSumQ(multiRes_bio)\n#' multiRes_fltQ    <- fltSumQ(multiRes_flt)\n#' multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)\n#' multiRes_mtQ     <- mtSumQ(multiRes_mt)\n#' multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)\n#' multiRes_advQ    <- advSumQ(multiRes_adv)\n#' \n#' \n#' multiRes_bio    <- bioSum(multiRes, long = TRUE) # Biol summary is only by year.\n#' multiRes_flt    <- fltSum(multiRes, long = TRUE, byyear = FALSE)\n#' multiRes_fltStk <- fltStkSum(multiRes, long = TRUE, byyear = FALSE)\n#' multiRes_mt     <- mtSum(multiRes, long = TRUE, byyear = FALSE)\n#' multiRes_mtStk  <- mtStkSum(multiRes, long = TRUE, byyear = FALSE)\n#' multiRes_adv    <- advSum(multiRes, long = TRUE) # Advice summary is only by year.\n#' \n#' multiRes_bioQ    <- bioSumQ(multiRes_bio)\n#' multiRes_fltQ    <- fltSumQ(multiRes_flt)\n#' multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)\n#' multiRes_mtQ     <- mtSumQ(multiRes_mt)\n#' multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)\n#' multiRes_advQ    <- advSumQ(multiRes_adv)\n#' \n#' multiRes_npv  <- npv(multiRes, y0 = '2014')\n#' risk_multiRes <- riskSum(multiRes, Bpa = c(stk1= 135000, stk2 = 124000), Blim = c(stk1= 96000, stk2 = 89000), Prflim = c(fl1 = 0, fl2 = 0), scenario = 'alternative')\n#'\n#' }\n\n#------------------------------------------------------------------------------#\n# bioSum :: data.frame[scenario, year, stock, iter, ||,||\n#        rec, ssb, f, biomass, catch, landings, discards, land.iyv, disc.iyv, catch.iyv]\n#------------------------------------------------------------------------------#\nbioSum <- function(obj, stknms = 'all', years = dimnames(obj$biols[[1]]@n)$year, long = TRUE, scenario = 'bc'){\n    xx <- summary_flbeia(obj, years)\n     \n    dnms <- dimnames(xx)\n    \n    if(stknms[1] == 'all') stknms <- dnms[[1]]\n    \n    xx <- xx[stknms,,,,drop=F]\n    dnms <- dimnames(xx)\n    \n    if(long == TRUE){\n      \n      df <- expand.grid(iter = dnms[[3]], year = dnms[[2]],indicator = c(dnms[[4]], 'land.iyv', 'disc.iyv', 'catch.iyv'),  stock = stknms)[,4:1]\n\n      df$stock     <- as.character(df$stock)\n      df$year      <- as.numeric(as.character(df$year))\n      df$indicator <- as.character(df$indicator)\n      df$iter      <- as.numeric(df$iter)\n\n      df <- cbind(df, value = NA)\n    \n      for(st in dnms[[1]]){\n            for(ind in dnms[[4]]){\n               df[df$stock == st & df$indicator == ind,'value'] <- c(t(xx[st,,,ind]))\n            }\n            for(i in 1:length(dnms[[3]])){\n              df[df$stock == st & df$indicator == 'land.iyv' & df$iter == i,'value'][-1] <- df[df$stock == st & df$indicator == 'landings' & df$iter == i,'value'][-1]/df[df$stock == st & df$indicator == 'landings' & df$iter == i,'value'][-length(years)]\n              df[df$stock == st & df$indicator == 'disc.iyv' & df$iter == i,'value'][-1] <- df[df$stock == st & df$indicator == 'discards' & df$iter == i,'value'][-1]/df[df$stock == st & df$indicator == 'discards' & df$iter == i,'value'][-length(years)]\n              df[df$stock == st & df$indicator == 'catch.iyv' & df$iter == i,'value'][-1] <- df[df$stock == st & df$indicator == 'catch' & df$iter == i,'value'][-1]/df[df$stock == st & df$indicator == 'catch' & df$iter == i,'value'][-length(years)]\n              }\n      }\n      df <- df[,c('year','stock', 'iter', 'indicator','value')]\n    }\n    else{ # long = FALSE\n      df <- expand.grid(iter = dnms[[3]], year = dnms[[2]],  stock = dnms[[1]])[,3:1]\n      \n      df$stock     <- as.character(df$stock)\n      df$year      <- as.numeric(as.character(df$year))\n      df$iter      <- as.numeric(df$iter)\n      \n      df <- cbind(df, biomass = NA, catch = NA, catch.iyv = NA,  discards = NA, disc.iyv = NA, f = NA, landings = NA, land.iyv = NA, rec = NA, ssb = NA)\n      \n      for(st in dnms[[1]]){\n        for(ind in dnms[[4]]){\n          df[df$stock == st,'biomass']  <- c(t(xx[st,,,'biomass'])) \n          df[df$stock == st,'catch']    <- c(t(xx[st,,,'catch']))  \n          df[df$stock == st,'discards'] <- c(t(xx[st,,,'discards']))\n          df[df$stock == st,'f']        <- c(t(xx[st,,,'f']))\n          df[df$stock == st,'landings'] <- c(t(xx[st,,,'landings']))\n          df[df$stock == st,'rec']      <- c(t(xx[st,,,'rec']))\n          df[df$stock == st,'ssb']      <- c(t(xx[st,,,'ssb']))\n          df[df$stock == st,'catch.iyv']     <- c(rep(NA, dim(xx)[3]), t(xx[st,-1,,'catch']/xx[st,-dim(xx)[2],,'catch']))\n          df[df$stock == st,'land.iyv']      <- c(rep(NA, dim(xx)[3]), t(xx[st,-1,,'landings']/xx[st,-dim(xx)[2],,'landings']))\n          df[df$stock == st,'disc.iyv']      <- c(rep(NA, dim(xx)[3]), t(xx[st,-1,,'discards']/xx[st,-dim(xx)[2],,'discards']))\n          df <- df[,c('year','stock', 'iter', 'biomass', 'catch', 'discards', \n                          'f', 'landings', 'rec', 'ssb', 'catch.iyv', 'land.iyv', 'disc.iyv')]\n          }\n      }\n    }\n    \n    df <- cbind(scenario = scenario, df)\n    return(df)\n}\n\n#' @rdname bioSum\nbioSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n\n  if(dim(obj)[2] <= 6){ # the object is in long format\n    res <- aggregate(value ~ stock + indicator + year + scenario, obj, quantile, prob = prob)\n    res <- cbind(res[,1:4], data.frame(res[,5],stringsAsFactors = FALSE))\n    \n    nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n           \n    names(res)[5:(5+length(prob)-1)] <- nms\n  }\n  else{\n    res <- aggregate(list(biomass = obj$biomass,catch = obj$catch,catch.iyv = obj$catch.iyv, \n                          discards = obj$discards, disc.iyv = obj$disc.iyv,\n                          f = obj$f,landings = obj$landings, land.iyv = obj$land.iyv,\n                          rec = obj$rec, ssb = obj$ssb), \n                       list(stock = obj$stock, year = obj$year, scenario = obj$scenario), quantile, prob = prob, na.rm=T)\n    res <- cbind(res[,1:3], data.frame(res[,4]), data.frame(res[,5]), data.frame(res[,6]),\n                           data.frame(res[,7]), data.frame(res[,8]), data.frame(res[,9]),\n                           data.frame(res[,10]), data.frame(res[,11]), data.frame(res[,12]),\n                           data.frame(res[,13]))\n                                                                                 \n    nmsp <- ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"),substr(prob,3, nchar(prob)))\n    \n    nms_bio  <- paste('biomass_q',nmsp, sep = \"\")\n    nms_cat  <- paste('catch_q',nmsp, sep = \"\")\n    nms_disc <- paste('discards_q',nmsp, sep = \"\")\n    nms_land <- paste('landings_q',nmsp, sep = \"\")\n    nms_f    <- paste('f_q',nmsp, sep = \"\")\n    nms_rec  <- paste('rec_q',nmsp, sep = \"\")\n    nms_ssb  <- paste('ssb_q',nmsp, sep = \"\")\n    nms_iyvcat  <- paste('catch.iyv_q',nmsp, sep = \"\")\n    nms_iyvdisc <- paste('disc.iyv_q',nmsp, sep = \"\")\n    nms_iyvland <- paste('land.iyv_q',nmsp, sep = \"\")\n    \n    names(res)[-c(1:3)] <- c(nms_bio, nms_cat, nms_iyvcat, nms_disc, nms_iyvdisc, nms_f, nms_land, nms_iyvland,nms_rec, nms_ssb)\n    \n    \n  }\n  \n  return(res)\n  }\n\n\n#------------------------------------------------------------------------------#\n# fltSum :: data.frame[scenario, year, season, fleet, iter, ||,|| \n#        capacity, catch, costs, discards, discRat, effort, fcosts, gva, grossValue, \n#        landings, fep, nVessels, price, grossSurplus, quotaUpt, salaries, \n#        vcosts, profitability]\n#------------------------------------------------------------------------------#\n#' @rdname bioSum\nfltSum <- function (obj, flnms = \"all\", years = dimnames(obj$biols[[1]]@n)$year, byyear = TRUE, long = TRUE, InterestRate = 0.03,scenario = 'bc')\n{\n  fleets <- obj$fleets\n  covars <- obj$covars\n  \n  fleets <- lapply(fleets, setUnitsNA)\n\n    if (flnms[1] == \"all\") flnms <- names(fleets)\n    \n    Dim <- dim(fleets[[1]]@effort[,years , ])[c(2, 4, 6)]\n    Dimnm <- dimnames(fleets[[1]]@effort[,years , ])\n    n <- prod(Dim) * length(flnms)\n    \n    if(is.null(covars$Depreciation)){ \n      covars$Depreciation <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, , ])[2:6]))\n      dimnames(covars$Depreciation) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, , ])[2:6])\n    }\n    if(is.null(covars$Salaries)){ \n      covars$Salaries <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, , ])[2:6]))\n      dimnames(covars$Salaries) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, , ])[2:6])\n    }\n    if(is.null(covars$MaxDays)){ \n      covars$MaxDays <- FLQuant(365/dim(fleets[[1]]@effort[, years, ])[4], dim = c(length(fleets),dim(fleets[[1]]@effort[, , ])[2:6]))\n      dimnames(covars$MaxDays) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, , ])[2:6])\n    }\n    if(is.null(covars$NumbVessels)){ \n      covars$NumbVessels <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, , ])[2:6]))\n      dimnames(covars$NumbVessels) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, , ])[2:6])\n    }\n    if(is.null(covars$CapitalCost)){ \n      covars$CapitalCost <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, , ])[2:6]))\n      dimnames(covars$CapitalCost) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, , ])[2:6])\n    }\n    \n    \n    if(byyear == F){\n      res <- data.frame(year = rep(years, prod(Dim[2:3]) * length(flnms)),\n        season = rep(rep(Dimnm[[4]], each = Dim[1]), Dim[3] *\n            length(flnms)), fleet = rep(flnms, each = prod(Dim)),\n        iter = rep(rep(1:Dim[3], each = prod(Dim[1:2])), length(flnms)),\n        capacity = numeric(n), \n        catch = numeric(n),\n        costs = numeric(n), \n        discards = numeric(n),\n        discRat = numeric(n),\n        effort = numeric(n),\n        fcosts = numeric(n),\n #       gcf = numeric(n),\n        gva = numeric(n),\n        grossValue = numeric(n), \n        landings = numeric(n),\n        fep = numeric(n), \n        NetProfit = numeric(n),\n        nVessels = numeric(n), \n        price = numeric(n), \n        grossSurplus = numeric(n),\n        quotaUpt = numeric(n), \n        salaries = numeric(n), \n        vcosts   = numeric(n),\n       stringsAsFactors = FALSE)\n    \n    k <- 1\n    for (f in flnms) {\n        fl <- fleets[[f]]\n        mts <- names(fl@metiers)\n        \n        \n        temp <- lapply(catchNames(fl), function(x) quantSums(unitSums(catchWStock.f(fl, x))))\n        res[k:(k + prod(Dim) - 1), \"catch\"] <- c(Reduce('+',temp)[,years])\n        \n        temp <- lapply(catchNames(fl), function(x) quantSums(unitSums(landWStock.f(fl, x))))\n        res[k:(k + prod(Dim) - 1), \"landings\"] <- c(Reduce('+',temp)[,years])\n        \n        temp <- lapply(catchNames(fl), function(x) quantSums(unitSums(discWStock.f(fl, x))))\n        res[k:(k + prod(Dim) - 1), \"discards\"] <- c(Reduce('+',temp)[,years])\n        \n        res[k:(k + prod(Dim) - 1), \"discRat\"] <- res[k:(k + prod(Dim) - 1), \"discards\"]/res[k:(k + prod(Dim) - 1), \"catch\"]\n          \n        res[k:(k + prod(Dim) - 1), \"capacity\"] <- c(fl@capacity[,years, ])\n        \n        res[k:(k + prod(Dim) - 1), \"effort\"] <- c(fl@effort[,years, ])\n        \n        res[k:(k + prod(Dim) - 1), \"fcosts\"] <- c(totfcost_flbeia(fl, covars, f)[,years, ])\n        \n        res[k:(k + prod(Dim) - 1), \"vcosts\"] <- c(totvcost_flbeia(fl)[,years, ])\n        \n        res[k:(k + prod(Dim) - 1), \"costs\"] <- c(costs_flbeia(fl, covars, f)[,years, ])\n       \n        res[k:(k + prod(Dim) - 1), \"grossValue\"] <- c(revenue_flbeia(fl)[,years, ]) \n        \n        res[k:(k + prod(Dim) - 1), \"grossSurplus\"] <- c(revenue_flbeia(fl)[,years, ]) - res[k:(k + prod(Dim) - 1), \"costs\"]\n        \n        res[k:(k + prod(Dim) - 1), \"price\"] <- res[k:(k + prod(Dim) - 1), \"grossValue\"] / res[k:(k + prod(Dim) - 1), \"landings\"]\n         \n        res[k:(k + prod(Dim) - 1), \"salaries\"] <- c(fl@crewshare[,years,]*revenue_flbeia(fl)[,years, ] + covars[['Salaries']][f,years])\n        \n        res[k:(k + prod(Dim) - 1), \"gva\"] <- res[k:(k + prod(Dim) - 1), \"grossValue\"] -  res[k:(k + prod(Dim) - 1), \"costs\"] + res[k:(k + prod(Dim) - 1), \"salaries\"]\n          \n        \n        res[k:(k + prod(Dim) - 1), \"profitability\"] <- res[k:(k + prod(Dim) - 1), \"grossSurplus\"]/res[k:(k + prod(Dim) - 1), \"grossValue\"]\n \n        res[k:(k + prod(Dim) - 1), \"nVessels\"]  <- c(covars[['NumbVessels']][f,years])\n          \n        res[k:(k + prod(Dim) - 1), \"fep\"] <-  res[k:(k + prod(Dim) - 1), \"grossSurplus\"] - c(covars[['Depreciation']][f,years]*covars[['NumbVessels']][f,years])\n        \n        res[k:(k + prod(Dim) - 1), \"netProfit\"] <-  res[k:(k + prod(Dim) - 1), \"fep\"] - c(covars[['CapitalCost']][f,years]*InterestRate*covars[['NumbVessels']][f,years])\n        \n        temp <- lapply(catchNames(fl), function(x) quantSums(unitSums(catchWStock.f(fl, x))))\n        temp <- Reduce('+',temp)[,years]\n        totTAC <- Reduce('+',lapply(names(obj$advice$quota.share), function(x) obj$advice$quota.share[[x]][f,years]*obj$advice$TAC[x,years]))\n        if(dim(temp)[4] > 1) {res[k:(k + prod(Dim) - 1), \"quotaUpt\"] <- c(sweep(temp, c(1:3,5:6),totTAC/dim(temp)[4], \"/\"))}\n        else{       res[k:(k + prod(Dim) - 1), \"quotaUpt\"] <- c(temp/totTAC)}\n        \n        k <- k + prod(Dim)\n    }}\n    else{\n      n <- prod(Dim[-2]) * length(flnms)\n      \n      res <- data.frame(year = rep(years, prod(Dim[3]) * length(flnms)),\n                        fleet = rep(flnms, each = prod(Dim[-2])),\n                        iter = rep(rep(1:Dim[3], each = prod(Dim[1])), length(flnms)),\n                        capacity = numeric(n), \n                        catch = numeric(n),\n                        costs = numeric(n), \n                        discards = numeric(n),\n                        discRat = numeric(n),\n                        effort = numeric(n),\n                        fcosts = numeric(n),\n                        #       gcf = numeric(n),\n                        gva = numeric(n),\n                        grossValue = numeric(n), \n                        landings = numeric(n),\n                        fep = numeric(n), \n                        nVessels = numeric(n), \n                        price = numeric(n), \n                        grossSurplus = numeric(n),\n                        netProfit = numeric(n),\n                        quotaUpt = numeric(n), \n                        salaries = numeric(n), \n                        vcosts   = numeric(n),\n                        stringsAsFactors = FALSE)\n      \n      k <- 1\n      for (f in flnms) {\n   #     print(f)\n        fl <- fleets[[f]]\n        mts <- names(fl@metiers)\n        \n        \n        temp <- lapply(catchNames(fl), function(x) seasonSums(quantSums(unitSums(catchWStock.f(fl, x)))))\n        res[k:(k + prod(Dim[-2]) - 1), \"catch\"] <- c(Reduce('+',temp)[, years, ])\n        \n        temp <- lapply(catchNames(fl), function(x) seasonSums(quantSums(unitSums(landWStock.f(fl, x)))))\n        res[k:(k + prod(Dim[-2]) - 1), \"landings\"] <- c(Reduce('+',temp)[, years, ])\n        \n        temp <- lapply(catchNames(fl), function(x) seasonSums(quantSums(unitSums(discWStock.f(fl, x)))))\n        res[k:(k + prod(Dim[-2]) - 1), \"discards\"] <- c(Reduce('+',temp)[, years, ])\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"discRat\"] <- res[k:(k + prod(Dim[-2]) - 1), \"discards\"]/res[k:(k + prod(Dim[-2]) - 1), \"catch\"]\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"capacity\"] <- c(seasonSums(fl@capacity[,years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"effort\"] <- c(seasonSums(fl@effort[,years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"fcosts\"] <- c(seasonSums(totfcost_flbeia(fl, covars, f)[,years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"vcosts\"] <- c(seasonSums(totvcost_flbeia(fl)[,years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"costs\"] <- c(seasonSums(costs_flbeia(fl, covars, f)[,years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"grossValue\"] <- c(seasonSums(revenue_flbeia(fl)[,years, ])) \n        \n        res[k:(k + prod(Dim[-2]) - 1), \"price\"] <- res[k:(k + prod(Dim[-2]) - 1), \"grossValue\"] / res[k:(k + prod(Dim[-2]) - 1), \"landings\"]\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"grossSurplus\"] <- c(seasonSums(revenue_flbeia(fl)[,years, ])) - res[k:(k + prod(Dim[-2]) - 1), \"costs\"]\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"salaries\"] <- c(seasonSums(fl@crewshare[,years,]*revenue_flbeia(fl)[,years, ] + covars[['Salaries']][f,years]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"gva\"] <- res[k:(k + prod(Dim[-2]) - 1), \"grossValue\"] - res[k:(k + prod(Dim[-2]) - 1), \"costs\"] + res[k:(k + prod(Dim[-2]) - 1), \"salaries\"]\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"profitability\"] <- res[k:(k + prod(Dim[-2]) - 1), \"grossSurplus\"]/res[k:(k + prod(Dim[-2]) - 1), \"grossValue\"]\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"nVessels\"]  <- c(seasonMeans(covars[['NumbVessels']][f, years, ]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"fep\"] <- c(seasonSums(revenue_flbeia(fl)[,years, ] -  costs_flbeia(fl, covars, f)[,years, ] - covars[['Depreciation']][f,years]*covars[['NumbVessels']][f,years]))\n        \n        res[k:(k + prod(Dim[-2]) - 1), \"netProfit\"] <- c(seasonSums(revenue_flbeia(fl)[,years, ] -  costs_flbeia(fl, covars, f)[,years, ] - covars[['Depreciation']][f,years]*covars[['NumbVessels']][f,years] - covars[['CapitalCost']][f,years]*InterestRate*covars[['NumbVessels']][f,years]))\n        \n        temp <- lapply(catchNames(fl), function(x) seasonSums(quantSums(unitSums(catchWStock.f(fl, x)))))\n        temp <- Reduce('+',temp)[, years, ]\n        totTAC <- Reduce('+',lapply(names(obj$advice$quota.share), function(x) obj$advice$quota.share[[x]][f,years]*obj$advice$TAC[x,years]))\n        res[k:(k + prod(Dim[-2]) - 1), \"quotaUpt\"] <- c(temp/totTAC)\n        \n        k <- k + prod(Dim[-2])\n    }}\n    \n    if(long == TRUE){ # transform res into long format\n      r1 <- ifelse(byyear == TRUE, 4,5)\n      r2 <- ifelse(byyear == TRUE, 22,23)\n      \n      names(res)[r1:r2] <- paste('indicator',names(res)[r1:r2], sep = \"_\")\n      res <- reshape(res, direction = 'long', varying = r1:r2, sep = \"_\")[,1:(r1+1)]\n      rownames(res) <- 1:dim(res)[1]\n      # res[, r1:(r1+1)] <-  res[, (r1+1):r1]\n      names(res)[r1:(r1+1)] <- c( 'indicator', 'value') \n    }\n  \n   res <- cbind(scenario = scenario, res)\n    return(res)\n}\n    \n#' @rdname bioSum\nfltSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 10){ # the object is in long format\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(value ~ fleet + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n      res <- cbind(res[,1:4], data.frame(res[,5]))\n    \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    \n      names(res)[5:(5+length(prob)-1)] <- nms\n    }\n    else{\n      res <- aggregate(value ~ fleet + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n      res <- cbind(res[,1:5], data.frame(res[,6]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      names(res)[6:(6+length(prob)-1)] <- nms\n    }\n  }\n  else{\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(list(capacity = obj$capacity,      catch = obj$catch,         costs = obj$costs,          discards = obj$discards,       \n                          discRat = obj$discRat,    effort = obj$effort,       fcosts = obj$fcosts,        gva  = obj$gva,                    \n                          grossValue  = obj$grossValue,         landings  = obj$landings,  fep  = obj$fep, netProfit = obj$netProfit, nVessels  = obj$nVessels,     \n                          price  = obj$price,           grossSurplus  = obj$grossSurplus,    quotaUpt  = obj$quotaUpt,   salaries  = obj$salaries, \n                          vcosts  = obj$vcosts,         profitability  = obj$profitability), \n                          list(fleet = obj$fleet, year = obj$year, scenario = obj$scenario), \n                          quantile, prob = prob, na.rm=T)\n    \n      res <- cbind(res[,1:3], \n                 data.frame(res[,4]),  data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),\n                 data.frame(res[,8]),  data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]),\n                 data.frame(res[,12]), data.frame(res[,13]), data.frame(res[,14]), data.frame(res[,15]),\n                 data.frame(res[,16]), data.frame(res[,17]), data.frame(res[,18]), data.frame(res[,19]),\n                 data.frame(res[,20]), data.frame(res[,21]), data.frame(res[,22]))\n                 \n      nms1  <- paste('capacity_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('costs_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms7  <- paste('fcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms8  <- paste('gva_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms9 <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms10 <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms11 <- paste('fep_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms12 <- paste('netProfit_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")     \n\t  nms13 <- paste('nVessels_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms14 <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms15 <- paste('grossSurplus_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms16 <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms17 <- paste('salaries_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms18 <- paste('vcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms19 <- paste('profitability_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n   \n      names(res)[-c(1:3)] <- unlist(mget(paste('nms', 1:19, sep=\"\")))\n    }\n    else{\n        res <- aggregate(list(capacity = obj$capacity,      catch = obj$catch,         costs = obj$costs,          discards = obj$discards,       \n                              discRat = obj$discRat,    effort = obj$effort,       fcosts = obj$fcosts,        gva  = obj$gva,                    \n                              grossValue  = obj$grossValue,         landings  = obj$landings,  fep  = obj$fep, netProfit = obj$netProfit,  nVessels  = obj$nVessels,     \n                              price  = obj$price,           grossSurplus  = obj$grossSurplus,    quotaUpt  = obj$quotaUpt,   salaries  = obj$salaries, \n                              vcosts  = obj$vcosts,         profitability  = obj$profitability), \n                         list(fleet = obj$fleet, year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n        \n        res <- cbind(res[,1:4], \n                     data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),  data.frame(res[,8]),\n                     data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]),  data.frame(res[,12]),\n                     data.frame(res[,13]), data.frame(res[,14]), data.frame(res[,15]), data.frame(res[,16]),\n                     data.frame(res[,17]), data.frame(res[,18]), data.frame(res[,19]), data.frame(res[,20]),\n                     data.frame(res[,21]), data.frame(res[,22]), data.frame(res[,23]))\n        \n        nms1  <- paste('capacity_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms2  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms3  <- paste('costs_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms4  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms5  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms6  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms7  <- paste('fcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms8  <- paste('gva_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms9  <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms10 <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms11 <- paste('fep_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms12 <- paste('netProfit_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms13 <- paste('nVessels_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms14 <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms15 <- paste('grossSurplus_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms16 <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms17 <- paste('salaries_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms18 <- paste('vcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        nms19 <- paste('profitability_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n        \n        names(res)[-c(1:4)] <- unlist(mget(paste('nms', 1:19, sep=\"\")))\n      \n    }\n  }\n  \n  return(res)\n}\n\n\n#-------------------------------------------------------------------------------\n# revenue_flbeia(fleet, years)\n#-------------------------------------------------------------------------------\n\n#' Economic summary functions.\n#' \n#' These functions provide summary results of costs, prices and revenues. Provided data can be dessagregated by fleet or by metier depending on the selected function.\n#' \n#' @param fleet An element of FLfleets object.\n#' @param stock An FLStock object.\n#' @param flnm Names of the fleets.\n#' @inheritParams FLBEIA\n#'   \n#' \n#' @details\n#'  \n#'\\itemize{\n#'       \\item{revenue_flbeia}{ computes the revenue by fleet and metier. The revenue is computed as\n#'        landings (weight) multiplied by the price.}\n#'       \\item{costs_flbeia}{ computes total costs as the sum of fixed and variable costs.}\n#'       \\item{totvcost_flbeia}{ computes the variable costs including crew share costs .}\n#'       \\item{totfcost_flbeia}{ computes the total costs by vessel.}\n#'       \\item{price_flbeia}{ computes the price by stock.} \n#'      }     \n#'         \n\n\n#' @rdname revenue_flbeia\nrevenue_flbeia <- function(fleet){\n    \n    sts <- catchNames(fleet)\n    mts <- names(fleet@metiers)\n    \n    res <- FLQuant(0, dimnames = dimnames(fleet@effort))\n    \n    D <- dim(res)\n    \n    for(mt in mts){\n        m <- fleet@metiers[[mt]]\n        for(st in sts){\n            if(!(st %in% catchNames(m))) next\n            dat <- m@catches[[st]]\n            res <- res + FLQuant(apply(dat@landings.n*dat@landings.wt*dat@price, c(2,4,6),sum,na.rm=T), dim = D)\n        }\n    }\n    return(res)               \n}\n\n#-------------------------------------------------------------------------------\n# costs_flbeia(fleet, years)\n#-------------------------------------------------------------------------------\n\n#' @rdname revenue_flbeia\ncosts_flbeia <- function(fleet, covars, flnm = NULL){\n    \n    res <- totvcost_flbeia(fleet) + totfcost_flbeia(fleet, covars, flnm)\n    \n    return(res)               \n}\n\n#-------------------------------------------------------------------------------\n# totvcost_flbeia(fleet, years)\n#-------------------------------------------------------------------------------\n#' @rdname revenue_flbeia\ntotvcost_flbeia <- function(fleet){\n    \n    mts <- names(fleet@metiers)\n    \n    res <- FLQuant(0, dimnames = dimnames(fleet@effort))\n    \n    for(mt in mts){\n        res <- res + fleet@metiers[[mt]]@vcost*fleet@effort*fleet@metiers[[mt]]@effshare\n    }\n    Rev <- revenue_flbeia(fleet)*fleet@crewshare\n    \n    res <- res + Rev\n    \n    return(res)               \n}\n\n#-------------------------------------------------------------------------------\n# totvcost_flbeia(fleet, years)\n#-------------------------------------------------------------------------------\n#' @rdname revenue_flbeia\ntotfcost_flbeia <- function(fleet, covars, flnm = NULL){\n     if(is.null(flnm)) flnm <- 1\n     return(fleet@fcost*covars[[\"NumbVessels\"]][flnm, ])            \n}\n\n\n#------------------------------------------------------------------------------#\n# fltStkSum :: data.frame[scenario, year, season, stock, fleet, iter, ||,|| \n#        landings, discards, catch, discRat, price, tacshare, quota, quotaUpt] \n#------------------------------------------------------------------------------#\n#' @rdname bioSum\nfltStkSum <- function(obj, flnms = names(obj$fleets), stknms = catchNames(obj$fleets), years = dimnames(obj$biols[[1]]@n)[[2]], byyear = TRUE, long = TRUE, scenario = 'bc'){\n    \n  fleets <- obj$fleets\n  advice <- obj$advice\n  \n  fleets <- lapply(fleets, setUnitsNA)\n  \n    if(flnms[1] == 'all') flnms <- names(fleets)\n    if(stknms[1] == 'all') stknms <- catchNames(fleets)\n     \n    Dim   <- dim(fleets[[1]]@effort[,years,])[c(2,4,6)]\n    Dimnm <- dimnames(fleets[[1]]@effort[,years,])\n    \n    res <- NULL\n    \n    \n   if(byyear == FALSE){                                \n    for(f in flnms){\n        \n        fl   <- fleets[[f]]\n\n        stfl <- catchNames(fl)        \n        sts   <- stknms[stknms %in% stfl]\n        \n        n <- prod(Dim)*length(sts)\n        \n        dff <- data.frame(year = rep(years, prod(Dim[2:3])*length(sts)), \n                    season = rep(rep(Dimnm[[4]], each = Dim[1]), Dim[3]*length(sts)), \n                    fleet = rep(f, n), \n                    stock = rep(sts, each = prod(Dim)),\n                    iter = rep(rep(1:Dim[3], each = prod(Dim[1:2])), length(sts)),  \n                    landings = numeric(n), \n                    discards = numeric(n),\n                    catch    = numeric(n),\n                    discRat  = numeric(n),\n                    price    = numeric(n),\n                    tacshare = numeric(n),\n                    quota    = numeric(n),\n                    quotaUpt = numeric(n),\n                    stringsAsFactors = FALSE)\n        \n        k <- 1\n        \n        for(st in sts){\n            \n            dff[k:(prod(Dim) + k-1),'landings'] <- c(apply(landWStock.f(fl, st),c(2,4,6), sum)[,years])    \n            dff[k:(prod(Dim) + k-1),'discards'] <- c(apply(discWStock.f(fl, st),c(2,4,6), sum)[,years]) \n            dff[k:(prod(Dim) + k-1),'catch']    <- dff[k:(prod(Dim) + k-1),'discards'] + dff[k:(prod(Dim) + k-1),'landings']\n            dff[k:(prod(Dim) + k-1),'discRat']  <- dff[k:(prod(Dim) + k-1),'discards']/dff[k:(prod(Dim) + k-1),'catch']\n            dff[k:(prod(Dim) + k-1),'price']    <- c(price_flbeia(fl, st)[,years])\n            dff[k:(prod(Dim) + k-1),'tacshare'] <- c((advice$quota.share[[st]][f,])[,years])\n            dff[k:(prod(Dim) + k-1),'quota']    <- c((advice$TAC[st,]*advice$quota.share[[st]][f,])[,years])\n            dff[k:(prod(Dim) + k-1),'quotaUpt'] <- dff[k:(prod(Dim) + k-1),'catch']/dff[k:(prod(Dim) + k-1),'quota']\n            \n            k <- k + prod(Dim)     \n        }\n        res <- rbind(res, dff)\n    }}\n    else{\n      for(f in flnms){\n        \n        fl   <- fleets[[f]]\n        \n        stfl <- catchNames(fl)        \n        sts  <- stknms[stknms %in% stfl]\n        \n        n <- prod(Dim[-2])*length(sts)\n        \n        dff <- data.frame(year = rep(years, prod(Dim[3])*length(sts)), \n                          fleet = rep(f, n), \n                          stock = rep(sts, each = prod(Dim[-2])),\n                          iter = rep(rep(1:Dim[3], each = prod(Dim[1])), length(sts)),  \n                          landings = numeric(n), \n                          discards = numeric(n),\n                          catch    = numeric(n),\n                          discRat  = numeric(n),\n                          price    = numeric(n),\n                          tacshare = numeric(n),\n                          quota    = numeric(n),\n                          quotaUpt = numeric(n),\n                          stringsAsFactors = FALSE)\n        \n        k <- 1\n        \n        for(st in sts){\n          \n          dff[k:(prod(Dim[-2]) + k-1),'landings'] <- c(apply(landWStock.f(fl, st),c(2,6), sum)[,years])    \n          dff[k:(prod(Dim[-2]) + k-1),'discards'] <- c(apply(discWStock.f(fl, st),c(2,6), sum)[,years]) \n          dff[k:(prod(Dim[-2]) + k-1),'catch']    <- dff[k:(prod(Dim[-2]) + k-1),'discards'] + dff[k:(prod(Dim[-2]) + k-1),'landings']\n          dff[k:(prod(Dim[-2]) + k-1),'discRat']  <- dff[k:(prod(Dim[-2]) + k-1),'discards']/dff[k:(prod(Dim[-2]) + k-1),'catch']\n          dff[k:(prod(Dim[-2]) + k-1),'price']    <- c(seasonMeans(price_flbeia(fl, st)[,years]*quantSums(unitSums(landWStock.f(fl, st)[,years])))/seasonSums(unitSums(quantSums(landWStock.f(fl, st)[,years]))))\n          dff[k:(prod(Dim[-2]) + k-1),'tacshare']    <- c((advice$quota.share[[st]][f,])[,years])\n          dff[k:(prod(Dim[-2]) + k-1),'quota']    <- c((advice$TAC[st,]*advice$quota.share[[st]][f,])[,years])\n          dff[k:(prod(Dim[-2]) + k-1),'quotaUpt'] <- dff[k:(prod(Dim[-2]) + k-1),'catch']/dff[k:(prod(Dim[-2]) + k-1),'quota']\n          \n          k <- k + prod(Dim[-2])     \n        }\n        res <- rbind(res, dff)\n      }\n    }\n    \n    if(long == TRUE){ # transform res into long format\n      r1 <- ifelse(byyear == TRUE, 5,6)\n      r2 <- ifelse(byyear == TRUE, 12,13)\n      \n      names(res)[r1:r2] <- paste('indicator',names(res)[r1:r2], sep = \"_\")\n      res <- reshape(res, direction = 'long', varying = r1:r2, sep = \"_\")[,1:(r1+1)]\n      rownames(res) <- 1:dim(res)[1]\n      names(res)[r1:(r1+1)] <- c('indicator', 'value') \n    }\n    \n    res <- cbind(scenario = scenario, res)\n  \n    return(res)\n}                               \n\n# fltStkSumQ \n#' @rdname bioSum\nfltStkSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 10){ # the object is in long format\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(value ~ fleet + stock + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n      res <- cbind(res[,1:5], data.frame(res[,6]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[6:(6+length(prob)-1)] <- nms\n    }\n    else{\n      res <- aggregate(value ~ fleet + stock + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n      res <- cbind(res[,1:6], data.frame(res[,7]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      names(res)[7:(7+length(prob)-1)] <- nms\n    }\n  }\n  else{\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(list(catch = obj$catch,  discards = obj$discards, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price,  quota = obj$quota,       quotaUpt = obj$quotaUpt), \n                       list(fleet = obj$fleet, stock = obj$stock, year = obj$year, scenario = obj$scenario), \n                       quantile, prob = prob, na.rm=T)\n      \n      res <- cbind(res[,1:4], \n                   data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),  data.frame(res[,8]),\n                   data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('quota_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms7  <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n     \n      names(res)[-c(1:4)] <- unlist(mget(paste('nms', 1:7, sep=\"\")))\n    }\n    else{\n      res <- aggregate(list(catch = obj$catch, discards = obj$catch, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price, quota = obj$quota,    quotaUpt = obj$quotaUpt),                   \n                       list(fleet = obj$fleet, stock = obj$stock, year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n      \n      res <- cbind(res[,1:5], \n                   data.frame(res[,6]),  data.frame(res[,7]),   data.frame(res[,8]),  data.frame(res[,9]),\n                   data.frame(res[,10]),  data.frame(res[,11]),  data.frame(res[,12]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('quota_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms7  <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[-c(1:5)] <-  unlist(mget(paste('nms', 1:7, sep=\"\")))\n      \n    }\n  }\n  \n  return(res)\n}\n\n\n\n#-------------------------------------------------------------------------------\n# price_flbeia(fleet, years) (mean price in a fleet)\n#-------------------------------------------------------------------------------\n#' @rdname revenue_flbeia\nprice_flbeia <- function(fleet, stock){\n\n    mts <- names(fleet@metiers)\n    \n    totL <- apply(landWStock.f(fleet, stock), c(2,4,6), sum)\n    \n    res <- FLQuant(0, dimnames = dimnames(fleet@effort))\n    \n    for(mt in mts){\n        m <- fleet@metiers[[mt]]\n        if(!(stock %in% catchNames(m))) next\n        dat <- m@catches[[stock]]\n        res <- res + apply(dat@landings.n*dat@landings.wt*dat@price, c(2,4,6),sum,na.rm=T)\n    }\n    \n    res <- res/totL\n    \n    return(res)                \n}\n\n\n#------------------------------------------------------------------------------#\n# mtStkSum data.frame[scenario, year, season, fleet, metier, stock, iter ||,|| \n#        catch, discards, discRat, landings, price] \n#------------------------------------------------------------------------------#\n#' @rdname bioSum\nmtStkSum <- function(obj, flnms = names(obj$fleets), stknms = catchNames(obj$fleets), \n                     years = dimnames(obj$biols[[1]]@n)[[2]], byyear = TRUE, long = TRUE, scenario = 'bc'){\n    \n    \n  fleets <- obj$fleets\n  advice <- obj$advice\n  \n  fleets <- lapply(fleets, setUnitsNA)\n  \n  \n  if(flnms[1] == 'all') flnms <- names(fleets)\n  if(stknms[1] == 'all') stknms <- catchNames(fleets)\n  \n    if(flnms[1] == 'all') flnms <- names(fleets)\n    if(stknms[1] == 'all') stknms <- catchNames(fleets)\n     \n    Dim   <- dim(fleets[[1]]@effort[,years,])[c(2,4,6)]\n    Dimnm <- dimnames(fleets[[1]]@effort[,years,])\n\n    res <- NULL\n    \n    if(byyear == FALSE){       \n    for(f in flnms){\n        fl <- fleets[[f]]\n        mts <- names(fl@metiers)\n        for(m in mts){\n            mt   <- fl@metiers[[m]]\n            stmt <- catchNames(mt)        \n            sts  <- stknms[stknms %in% stmt]\n\n            n <- prod(Dim)*length(sts)\n        \n            dfm <-  data.frame(year = rep(years, prod(Dim[2:3])*length(sts)), \n                        season = rep(rep(Dimnm[[4]], each = Dim[1]), Dim[3]*length(sts)), \n                        fleet = rep(f, n), \n                        metier = rep(m, n),\n                        stock = rep(sts, each = prod(Dim)),\n                        iter = rep(rep(1:Dim[3], each = prod(Dim[1:2])), length(sts)),  \n                        catch = numeric(n), \n                        discards  = numeric(n),\n                        discRat  = numeric(n),\n                        landings = numeric(n), \n                        price = numeric(n),\n                        stringsAsFactors = FALSE)\n            k <- 1\n            \n            for(ss in sts){\n                cc <- mt@catches[[ss]]\n                dfm[k:(k+prod(Dim)-1),'landings'] <- c(apply(cc@landings[,years,], c(2,4,6), sum, na.rm=T))\n                dfm[k:(k+prod(Dim)-1),'discards'] <- c(apply(cc@discards[,years,], c(2,4,6), sum, na.rm=T))\n                dfm[k:(k+prod(Dim)-1),'catch'] <- dfm[k:(k+prod(Dim)-1),'discards'] + dfm[k:(k+prod(Dim)-1),'landings']\n                dfm[k:(k+prod(Dim)-1),'discRat'] <-  dfm[k:(k+prod(Dim)-1),'discards']/dfm[k:(k+prod(Dim)-1),'catch']\n                revst <- apply(cc@landings.n*cc@landings.wt*cc@price, c(2,4,6), sum, na.rm=T)[,years,]\n                dfm[k:(k+prod(Dim)-1),'price']  <- c(revst)/dfm[k:(k+prod(Dim)-1),'landings']  \n                k <- k + prod(Dim)\n            }\n            res <- rbind(res, dfm) \n        }  \n    }}\n    else {\n      for(f in flnms){\n        fl <- fleets[[f]]\n        mts <- names(fl@metiers)\n        for(m in mts){\n          mt   <- fl@metiers[[m]]\n          stmt <- catchNames(mt)        \n          sts  <- stknms[stknms %in% stmt]\n          \n          n <- prod(Dim[-2])*length(sts)\n          \n          dfm <-  data.frame(year = rep(years, prod(Dim[3])*length(sts)), \n                            fleet = rep(f, n), \n                             metier = rep(m, n),\n                             stock = rep(sts, each = prod(Dim[-2])),\n                             iter = rep(rep(1:Dim[3], each = prod(Dim[1])), length(sts)),  \n                             catch = numeric(n), \n                             discards  = numeric(n),\n                             discRat  = numeric(n),\n                             landings = numeric(n), \n                             price = numeric(n),\n                            stringsAsFactors = FALSE)\n          k <- 1\n          \n          for(ss in sts){\n            cc <- mt@catches[[ss]]\n            dfm[k:(k+prod(Dim[-2])-1),'landings'] <- c(apply(cc@landings[,years,], c(2,6), sum, na.rm=T))\n            dfm[k:(k+prod(Dim[-2])-1),'discards'] <- c(apply(cc@discards[,years,], c(2,6), sum, na.rm=T))\n            dfm[k:(k+prod(Dim[-2])-1),'catch'] <- dfm[k:(k+prod(Dim[-2])-1),'discards'] + dfm[k:(k+prod(Dim[-2])-1),'landings']\n            dfm[k:(k+prod(Dim[-2])-1),'discRat'] <-  dfm[k:(k+prod(Dim[-2])-1),'discards']/dfm[k:(k+prod(Dim[-2])-1),'catch']\n            revst <- apply(cc@landings.n*cc@landings.wt*cc@price, c(2,6), sum, na.rm=T)[,years,]\n            dfm[k:(k+prod(Dim[-2])-1),'price']  <- c(revst)/dfm[k:(k+prod(Dim[-2])-1),'landings']  \n            k <- k + prod(Dim[-2])\n          }\n          res <- rbind(res, dfm) \n        }  \n      }\n      \n    }\n \n    if(long == TRUE){ # transform res into long format\n      r1 <- ifelse(byyear == TRUE, 6,7)\n      r2 <- ifelse(byyear == TRUE, 10,11)\n      \n      names(res)[r1:r2] <- paste('indicator',names(res)[r1:r2], sep = \"_\")\n      res <- reshape(res, direction = 'long', varying = r1:r2, sep = \"_\")[,1:(r1+1)]\n      rownames(res) <- 1:dim(res)[1]\n      names(res)[r1:(r1+1)] <- c('indicator', 'value') \n    }\n    \n    res <- cbind(scenario = scenario, res)\n    \n    return(res)\n\n}\n\n\n# mtStkSumQ \n#' @rdname bioSum\nmtStkSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 10){ # the object is in long format\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(value ~ fleet + metier + stock + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n      res <- cbind(res[,1:6], data.frame(res[,7]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[7:(7+length(prob)-1)] <- nms\n    }\n    else{\n      res <- aggregate(value ~ fleet + metier + stock + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n      res <- cbind(res[,1:7], data.frame(res[,8]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      names(res)[8:(8+length(prob)-1)] <- nms\n    }\n  }\n  else{\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(list(catch = obj$catch,  discards = obj$discards, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price), \n                       list(fleet = obj$fleet, metier = obj$metier, stock = obj$stock, year = obj$year, scenario = obj$scenario), \n                       quantile, prob = prob, na.rm=T)\n      \n      res <- cbind(res[,1:5], \n                   data.frame(res[,6]),  data.frame(res[,7]),  data.frame(res[,8]),  \n                   data.frame(res[,9]),  data.frame(res[,10]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    \n      names(res)[-c(1:5)] <- unlist(mget(paste('nms', 1:5, sep=\"\")))\n    }\n    else{\n      res <- aggregate(list(catch = obj$catch, discards = obj$discards, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price),                   \n                       list(fleet = obj$fleet, metier = obj$metier, stock = obj$stock, year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n      \n      res <- cbind(res[,1:6], \n                   data.frame(res[,7]),  data.frame(res[,8]),   data.frame(res[,9]),  data.frame(res[,10]),\n                   data.frame(res[,11]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n     \n      names(res)[-c(1:6)] <-  unlist(mget(paste('nms', 1:5, sep=\"\")))\n      \n    }\n  }\n  \n  return(res)\n}\n\n\n#------------------------------------------------------------------------------#\n# mtSum data.frame[scenario, year, season, fleet, metier, iter ||,|| \n#        effshare, effort, grossValue, vcost] \n#------------------------------------------------------------------------------#\n#' @rdname bioSum\nmtSum <- function(obj, flnms = names(obj$fleets),\n                     years = dimnames(obj$biols[[1]]@n)[[2]], byyear = TRUE, long = TRUE, scenario = 'bc'){\n  \n  if(flnms[1] == 'all') flnms <- names(obj$fleets)\n  \n  fleets <- obj$fleets\n  \n  fleets <- lapply(fleets, setUnitsNA)\n  \n  Dim   <- dim(fleets[[1]]@effort[,years,])[c(2,4,6)]\n  Dimnm <- dimnames(fleets[[1]]@effort[,years,])\n  \n  res <- NULL\n  \n  if(byyear == FALSE){  \n  for(f in flnms){\n    fl <- fleets[[f]]\n    mts <- names(fl@metiers)\n    n <- prod(Dim)*length(mts)\n    \n    dff <-  data.frame(year = rep(years, prod(Dim[2:3])*length(mts)), \n                       season = rep(rep(Dimnm[[4]], each = Dim[1]), Dim[3]*length(mts)), \n                       fleet = rep(f, n), \n                       metier = rep(mts, each = prod(Dim)),\n                       iter = rep(rep(1:Dim[3], each = prod(Dim[1:2])), length(mts)),  \n                       effshare = numeric(n), \n                       effort = numeric(n),\n                       grossValue = numeric(n), \n                       vcost = numeric(n),\n                       stringsAsFactors = FALSE)\n    k <- 1\n    for(m in mts){\n      mt <- fl@metiers[[m]]\n      dff[k:(k+prod(Dim)-1),'effort']   <- c((fl@effort*mt@effshare)[,years,])\n      dff[k:(k+prod(Dim)-1),'effshare'] <- c(mt@effshare[,years,])\n      dff[k:(k+prod(Dim)-1),'vcost']    <- c((fl@effort*mt@effshare*mt@vcost)[,years,])\n       dff[k:(k+prod(Dim)-1),'grossValue'] <- c(Reduce('+', lapply(mt@catches, function(x) unitSums(quantSums(x@landings.n*x@price))[,years])))\n\n      k <- k + prod(Dim)\n    }\n    \n    res <- rbind(res, dff)      \n  }}\n  else{\n    for(f in flnms){\n      fl <- fleets[[f]]\n      mts <- names(fl@metiers)\n      n <- prod(Dim[-2])*length(mts)\n      \n      dff <-  data.frame(year = rep(years, Dim[3]*length(mts)), \n                         fleet = rep(f, n), \n                         metier = rep(mts, each = prod(Dim[-2])),\n                         iter = rep(rep(1:Dim[3], each = prod(Dim[1])), length(mts)),  \n                         effshare = numeric(n), \n                         effort = numeric(n),\n                         grossValue = numeric(n), \n                         vcost = numeric(n),\n                         stringsAsFactors = FALSE)\n      k <- 1\n      for(m in mts){\n        mt <- fl@metiers[[m]]\n        dff[k:(k+prod(Dim[-2])-1),'effort']   <- c(seasonSums((fl@effort*mt@effshare)[,years,]))\n        dff[k:(k+prod(Dim[-2])-1),'effshare'] <- c(seasonSums(mt@effshare[,years,]))\n        dff[k:(k+prod(Dim[-2])-1),'vcost']    <- c(seasonSums(fl@effort*mt@effshare*mt@vcost)[,years,])\n        dff[k:(k+prod(Dim[-2])-1),'grossValue'] <- c(Reduce('+', lapply(mt@catches, function(x) seasonSums(unitSums(quantSums(x@landings.n*x@price)))[,years])))\n        \n        k <- k + prod(Dim[-2])\n      }\n      \n      res <- rbind(res, dff)   \n      \n    }\n  }\n    \n  if(long == TRUE){\n     # transform res into long format\n      r1 <- ifelse(byyear == TRUE, 5,6)\n      r2 <- ifelse(byyear == TRUE, 8,9)\n      \n      names(res)[r1:r2] <- paste('indicator',names(res)[r1:r2], sep = \"_\")\n      res <- reshape(res, direction = 'long', varying = r1:r2, sep = \"_\")[,1:(r1+1)]\n      rownames(res) <- 1:dim(res)[1]\n      names(res)[r1:(r1+1)] <- c('indicator', 'value') \n    }\n    \n    res <- cbind(scenario = scenario, res)\n    \n\n  return(res)\n}\n\n\n# mtStkSumQ \n#' @rdname bioSum\nmtSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 9){ # the object is in long format\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(value ~ fleet + metier + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n      res <- cbind(res[,1:5], data.frame(res[,6]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[6:(6+length(prob)-1)] <- nms\n    }\n    else{\n      res <- aggregate(value ~ fleet + metier + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n      res <- cbind(res[,1:6], data.frame(res[,7]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      names(res)[7:(7+length(prob)-1)] <- nms\n    }\n  }\n  else{\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(list(effort = obj$effort,  effshare = obj$effshare, vcost = obj$vcost, grossValue = obj$grossValue,       \n                            vcost = obj$vcost), \n                       list(fleet = obj$fleet, metier = obj$metier, year = obj$year, scenario = obj$scenario), \n                       quantile, prob = prob, na.rm=T)\n      \n      res <- cbind(res[,1:4], \n                   data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),  \n                   data.frame(res[,6]))\n      \n      nms1  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('effshare_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('vcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n       \n      names(res)[-c(1:4)] <- unlist(mget(paste('nms', 1:4, sep=\"\")))\n    }\n    else{\n      res <- aggregate(list(effort = obj$effort,  effshare = obj$effshare, vcost = obj$vcost, grossValue = obj$grossValue,       \n                            vcost = obj$vcost),                    \n                       list(fleet = obj$fleet, metier = obj$metier,  year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n      \n      res <- cbind(res[,1:5], \n                   data.frame(res[,6]),  data.frame(res[,7]),   data.frame(res[,8]),  data.frame(res[,9]))\n                   \n      \n      nms1  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('effshare_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('vcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[-c(1:5)] <-  unlist(mget(paste('nms', 1:4, sep=\"\")))\n      \n    }\n  }\n  \n  return(res)\n}\n\n#------------------------------------------------------------------------------#\n# advSum :: data.frame[scenario, year, stock, iter ||,|| \n#        catch, discards, discRat, landings, quotaUpt, tac] \n#------------------------------------------------------------------------------#\n#' @rdname bioSum\nadvSum <- function(obj, stknms = catchNames(obj$fleets), \n                     years = dimnames(obj$biols[[1]]@n)[[2]], long = TRUE, scenario = 'bc'){\n  \n  \n  fleets <- obj$fleets\n  advice <- obj$advice\n  \n  if(stknms[1] == 'all') stknms <- names(biols)\n  \n  sts <- stknms\n  \n  Dim   <- dim(fleets[[1]]@effort[,years,])[c(2,6)]\n  Dimnm <- dimnames(fleets[[1]]@effort[,years,])\n  \n  res <- NULL\n  \n    \n  n <- prod(Dim)*length(stknms)\n        \n  dfm <-  data.frame(year = rep(years, prod(Dim[2])*length(sts)), \n                           stock = rep(sts, each = prod(Dim)),\n                           iter = rep(rep(1:Dim[2], each = prod(Dim[1])), length(sts)),  \n                           catch = numeric(n), \n                           discards  = numeric(n),\n                           discRat  = numeric(n),\n                           landings = numeric(n), \n                           quotaUpt = numeric(n), \n                           tac = numeric(n),\n                     stringsAsFactors = FALSE)\n   k <- 1\n        \n   for(ss in sts){\n\n      dfm[k:(k+prod(Dim)-1),'landings'] <- c(quantSums(seasonSums(unitSums(landWStock(fleets,ss)[,years]))))\n      dfm[k:(k+prod(Dim)-1),'discards'] <- c(quantSums(seasonSums(unitSums(discWStock(fleets,ss)[,years]))))\n      dfm[k:(k+prod(Dim)-1),'catch']    <- c(quantSums(seasonSums(unitSums(catchWStock(fleets,ss)[,years]))))\n      dfm[k:(k+prod(Dim)-1),'discRat']  <-  dfm[k:(k+prod(Dim)-1),'discards']/dfm[k:(k+prod(Dim)-1),'catch']\n      dfm[k:(k+prod(Dim)-1),'tac']      <- c(obj$advice$TAC[ss,years])\n      dfm[k:(k+prod(Dim)-1),'quotaUpt'] <- dfm[k:(k+prod(Dim)-1),'catch']/dfm[k:(k+prod(Dim)-1),'tac']   \n          \n    k <- k + prod(Dim)\n  }\n  res <- rbind(res, dfm) \n       \n  if(long == TRUE){ # transform res into long format\n    r1 <-  4\n    r2 <- 9\n    \n    names(res)[r1:r2] <- paste('indicator',names(res)[r1:r2], sep = \"_\")\n    res <- reshape(res, direction = 'long', varying = r1:r2, sep = \"_\")[,1:(r1+1)]\n    rownames(res) <- 1:dim(res)[1]\n    names(res)[r1:(r1+1)] <- c('indicator', 'value') \n  }\n  \n  res <- cbind(scenario = scenario, res)\n  \n  return(res)\n  \n}\n\n\n# mtStkSumQ \n#' @rdname bioSum\nadvSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 8){ # the object is in long format\n    \n    res <- aggregate(value ~  stock + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n    res <- cbind(res[,1:4], data.frame(res[,5]))\n      \n    nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n    names(res)[5:(5+length(prob)-1)] <- nms\n  }\n  \n  else{\n    \n      res <- aggregate(list(catch = obj$catch,  discards = obj$discards, discRat = obj$discRat, landings = obj$landings,       \n                            quotaUpt = obj$quotaUpt, tac = obj$tac), \n                       list(stock = obj$stock, year = obj$year, scenario = obj$scenario), \n                       quantile, prob = prob, na.rm=T)\n      \n      res <- cbind(res[,1:3], \n                   data.frame(res[,4]),  data.frame(res[,5]),  data.frame(res[,6]),  \n                   data.frame(res[,7]),  data.frame(res[,8]),  data.frame(res[,9]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('tac_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[-c(1:3)] <- unlist(mget(paste('nms', 1:6, sep=\"\")))\n    }\n  \n  return(res)\n}\n\n#----------------------------------------------------------------------\n# riskSum(obj, stocks, fleets, years, long)\n# Bpa = a named vector with the precautionary biomass per stock.\n# Blim = a named vector with the limit biomass per stock.\n# Prflim = a named vector with the limit profit per fleet.\n#----------------------------------------------------------------------\n#' @rdname bioSum\nriskSum <- function(obj, stknms = names(obj$biols), Bpa, Blim, Prflim, flnms = names(obj$fleets), years = dimnames(obj$biols[[1]]@n)[[2]], scenario = 'bc'){\n\n  if (stknms == 'all') { \n    stknms <- names(obj$biols)\n  } else if (sum(!stknms %in% names(obj$biols))>0) {\n    stop(paste(\"'stknms' values should be in the following list: \", paste(names(obj$biols), collapse = \", \"), sep=''))\n  }\n  if (sum(!names(Bpa) %in% stknms) + sum(!names(Blim) %in% stknms)>0) {\n    stop(paste(\"Check names for 'Bpa' and 'Blim'. Values should be in the following list: \", paste(stknms, collapse = \", \"), sep=''))\n  }\n  \n  bioS <- bioSum(obj, stknms = stknms, years = years, long = FALSE, scenario = scenario)\n  bioS <- cbind(bioS, Bpa = Bpa[bioS$stock],  Blim = Blim[bioS$stock])\n  bioS <- cbind(bioS, risk.pa = as.numeric(bioS$ssb < bioS$Bpa), risk.lim = as.numeric(bioS$ssb < bioS$Blim))\n\n  if (flnms == 'all') { \n    flnms <- names(obj$fleets)\n  } else if (sum(!flnms %in% names(obj$fleets))>0) {\n    stop(paste(\"'flnms' values should be in the following list: \", paste(names(obj$fleets), collapse = \", \"), sep=''))\n  }\n  if (sum(!names(Prflim) %in% flnms)>0) {\n    stop(paste(\"Check names for 'Prflim'. Values should be in the following list: \", paste(flnms, collapse = \", \"), sep=''))\n  }\n  \n  flS <- fltSum(obj, years = years, flnms = flnms, long = FALSE, scenario = scenario)\n  flS <- cbind(flS, refp = Prflim[flS$fleet])\n  flS <- cbind(flS, risk = as.numeric(flS$grossSurplus < flS$refp))\n  \n  if(all(is.na(flS$risk))){ # if economic data not available for example\n    flS$risk <- 0\n    auxFl    <- aggregate(risk ~ year + fleet + scenario, data=flS, FUN=function(x){sum(x)/length(x)})\n    auxFl$risk[] <- NA\n  }else{\n    auxFl    <- aggregate(risk ~ year + fleet + scenario, data=flS, FUN=function(x){sum(x)/length(x)})\n  }\n  \n  # auxBioPa   <- aggregate(risk.pa ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n  if(all(is.na(bioS$risk.pa))){ # if Bpa not available\n    bioS$risk.pa <- 0\n    auxBioPa     <- aggregate(risk.pa ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n    auxBioPa$risk.pa[] <- NA\n  }else{\n    auxBioPa     <- aggregate(risk.pa ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n  }\n  \n  # auxBiolim  <- aggregate(risk.lim ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n  if(all(is.na(bioS$risk.lim))){ # if Blim not available\n    bioS$risk.lim <- 0\n    auxBiolim     <- aggregate(risk.lim ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n    auxBiolim$risk.lim[] <- NA\n  }else{\n    auxBiolim     <- aggregate(risk.lim ~ year + stock + scenario, data=bioS, FUN=function(x){sum(x)/length(x)})\n  }\n  \n  names(auxFl) <- c('year', 'unit', 'scenario', 'value')\n  names(auxBioPa) <- c('year', 'unit', 'scenario', 'value')\n  names(auxBiolim) <- c('year', 'unit', 'scenario', 'value')\n  \n  res <- rbind( cbind(auxFl[,1:3],     indicator = 'pPrflim', value = auxFl[,4]), \n                cbind(auxBioPa[,1:3],  indicator = 'pBpa',    value = auxBioPa[,4]), \n                cbind(auxBiolim[,1:3], indicator = 'pBlim',   value = auxBiolim[,4]))\n # No sense in wide format  \n#  if(long == FALSE){\n#    temp <- reshape(res,v.names = 'value', timevar = 'indicator', idvar = c('scenario', 'year', 'unit'), direction = 'wide')  }\n\n  return(res)\n}\n\n#----------------------------------------------------------------------\n# npv(obj, years, flnms)\n#----------------------------------------------------------------------\n#' @rdname bioSum\nnpv <- function(obj, discF = 0.05, y0, flnms = names(obj$fleets), years = dimnames(obj$biols[[1]]@n)[[2]], scenario = 'bc'){\n  \n  flS <- fltSum(obj, years = years, flnms = flnms, long = FALSE)\n  \n  y0 <- as.numeric(y0)\n  \n  flS <- cbind(flS, discount= (1+discF)^(as.numeric(as.character(flS$year))-y0))\n  flS <- cbind(flS, discProf = flS$grossSurplus/(flS$discount))\n  \n  flS <- subset(flS, year %in% c(years))\n  \n  res <- aggregate(discProf ~ fleet + iter, data = flS, FUN = sum)\n  \n  names(res)[3] <- 'npv'\n  \n  res <- cbind(scenario = scenario, res)\n  \n  return(res)\n  \n}  \n    \n\n#' @rdname bioSum\nnpvQ <- function(obj, prob = c(0.05,0.5,0.95)){\n  \n  res <- aggregate(npv ~  fleet + scenario, obj, quantile, prob = prob,na.rm=T)\n  res <- cbind(res[,1:2], data.frame(res[,3]))\n  \n  nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n  \n  names(res)[3:5] <- nms\n  \n  \n  return(res)\n  \n}   \n\n\n#----------------------------------------------------------------------\n# vesselSum\n#----------------------------------------------------------------------\n#' @rdname bioSum\nvesselSum <- function(obj, flnms = \"all\", years = dimnames(obj$biols[[1]]@n)$year, byyear = TRUE, long = TRUE, scenario = 'bc'){\n  \n  flS <- fltSum(obj, flnms = flnms, years = years, byyear = byyear, long = long, scenario = scenario)\n  \n  ids <- c(\"catch\", \"costs\", \"discards\",\"discRat\",\"effort\",  \"fcosts\",\"gva\",\"grossValue\", \"landings\",     \n           \"fep\",  \"netProfit\", \"price\", \"grossSurplus\", \"quotaUpt\", \"salaries\", \"vcosts\")\n  \n  if(byyear == TRUE){\n  if(long == FALSE){\n    for(col in ids){ #5:22\n      flS[,col] <- flS[,col]/flS[,'nVessels']\n    }\n    res <- flS[,c(names(flS)[1:4], ids, 'profitability')] # res <- flS[,c(1:4,6:15,17:23)]\n  }\n  else{\n   # ids <- c(\"catch\", \"costs\", \"discards\",\"discRat\",\"effort\",  \"fcosts\",\"gva\",\"grossValue\", \"landings\",     \n   #    \"fep\",  \"netProfit\", \"price\", \"grossSurplus\", \"quotaUpt\", \"salaries\", \"vcosts\")\n   for(id in ids){\n     flS[flS$indicator == id, 'value'] <- flS[flS$indicator == id, 'value']/flS[flS$indicator == 'nVessels', 'value']\n   }\n   res <- subset(flS, indicator %in% c(ids, 'profitability'))\n  }}\n   else{\n     if(long == FALSE){\n       for(col in ids){ #6:23\n         flS[,col] <- flS[,col]/flS[,'nVessels']\n       }\n       res <- flS[,c(names(flS)[1:5], ids, 'profitability')] # res <- flS[,c(1:5,7:16,18:24)]\n     }\n     else{\n       # ids <- c(\"catch\", \"costs\", \"discards\",\"discRat\",\"effort\",  \"fcosts\",\"gva\",\"grossValue\", \"landings\",     \n       #          \"fep\", \"netProfit\",  \"price\", \"grossSurplus\", \"quotaUpt\", \"salaries\", \"vcosts\")\n       for(id in ids){\n         flS[flS$indicator == id, 'value'] <- flS[flS$indicator == id, 'value']/flS[flS$indicator == 'nVessels', 'value']\n       }\n       res <- subset(flS, indicator %in% c(ids, 'profitability'))\n   }\n   \n  }\n     return(res) \n               \n}\n\n#' @rdname bioSum\nvesselSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n\nif(dim(obj)[2] < 10){ # the object is in long format\n  \n  if(!('season' %in% names(obj))){\n    res <- aggregate(value ~ fleet + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n    res <- cbind(res[,1:4], data.frame(res[,5]))\n    \n    nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    \n    names(res)[5:(5+length(prob)-1)] <- nms\n  }\n  else{\n    res <- aggregate(value ~ fleet + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n    res <- cbind(res[,1:5], data.frame(res[,6]))\n    \n    nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    names(res)[6:(6+length(prob)-1)] <- nms\n  }\n}\nelse{\n  \n  if(!('season' %in% names(obj))){\n    res <- aggregate(list(    catch = obj$catch,         costs = obj$costs,          discards = obj$discards,       \n                          discRat = obj$discRat,    effort = obj$effort,       fcosts = obj$fcosts,        gva  = obj$gva,                    \n                          grossValue  = obj$grossValue,         landings  = obj$landings,  fep  = obj$fep,  netProfit = obj$netProfit,  \n                          price  = obj$price,           grossSurplus  = obj$grossSurplus,    quotaUpt  = obj$quotaUpt,   salaries  = obj$salaries, \n                          vcosts  = obj$vcosts,         profitability  = obj$profitability), \n                     list(fleet = obj$fleet, year = obj$year, scenario = obj$scenario), \n                     quantile, prob = prob, na.rm=T)\n    \n    res <- cbind(res[,1:3], \n                 data.frame(res[,4]),  data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),\n                 data.frame(res[,8]),  data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]),\n                 data.frame(res[,12]), data.frame(res[,13]), data.frame(res[,14]), data.frame(res[,15]),\n                 data.frame(res[,16]), data.frame(res[,17]), data.frame(res[,18]), data.frame(res[,19]),  \n                 data.frame(res[,20]))\n    \n    nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms2  <- paste('costs_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms3  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms4  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms5  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms6  <- paste('fcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms7  <- paste('gva_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms8  <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms9  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms10 <- paste('fep_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms11 <- paste('netProfit_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms12 <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms13 <- paste('grossSurplus_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms14 <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms15 <- paste('salaries_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms16 <- paste('vcosts_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms17 <- paste('profitability_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    \n    names(res)[-c(1:3)] <- unlist(mget(paste('nms', c(1:17), sep=\"\")))\n  }\n  else{\n    res <- aggregate(list(    catch = obj$catch,         costs = obj$costs,          discards = obj$discards,       \n                          discRat = obj$discRat,    effort = obj$effort,       fcosts = obj$fcosts,        gva  = obj$gva,                    \n                          grossValue  = obj$grossValue,         landings  = obj$landings,  fep  = obj$fep, netProfit = obj$netProfit,   \n                          price  = obj$price,           grossSurplus  = obj$grossSurplus,    quotaUpt  = obj$quotaUpt,   salaries  = obj$salaries, \n                          vcosts  = obj$vcosts,         profitability  = obj$profitability), \n                     list(fleet = obj$fleet, year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n    \n    res <- cbind(res[,1:4], \n                 data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]), data.frame(res[,8]),  \n                 data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]), data.frame(res[,12]), \n                 data.frame(res[,13]), data.frame(res[,14]), data.frame(res[,15]), data.frame(res[,16]), \n                 data.frame(res[,17]), data.frame(res[,18]), data.frame(res[,19]), data.frame(res[,20]), \n                 data.frame(res[,21]))\n    \n    nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms2  <- paste('costs_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms3  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms4  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms5  <- paste('effort_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms6  <- paste('fcost_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms7  <- paste('gva_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms8  <- paste('grossValue_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms9  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms10 <- paste('fep_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms11 <- paste('netProfit_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms12 <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms13 <- paste('grossSurplus_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms14 <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms15 <- paste('salaries_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms16 <- paste('vcosts_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    nms17 <- paste('profitability_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n    \n    names(res)[-c(1:4)] <- unlist(mget(paste('nms',  c(1:17), sep=\"\")))\n    \n  }\n}\n\nreturn(res)\n}\n\n\n#----------------------------------------------------------------------\n# vesselStkSum\n#----------------------------------------------------------------------\n#' @rdname bioSum\nvesselStkSum <- function(obj, flnms = names(obj$fleets), stknms = catchNames(obj$fleets), years = dimnames(obj$biols[[1]]@n)[[2]], byyear = TRUE, long = TRUE, scenario = 'bc'){\n  \n  fleets <- obj$fleets\n  covars <- obj$covars\n  \n  if (flnms[1] == \"all\") flnms <- names(fleets)\n  \n  Dim <- dim(fleets[[1]]@effort[, years, ])[c(2, 4, 6)]\n  Dimnm <- dimnames(fleets[[1]]@effort[, years, ])\n  n <- prod(Dim) * length(flnms)\n  \n  if(is.null(covars$Depreciation)){ \n    covars$Depreciation <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, years, ])[2:6]))\n    dimnames(covars$Depreciation) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, years, ])[2:6])\n  }\n  if(is.null(covars$Salaries)){ \n    covars$Salaries <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, years, ])[2:6]))\n    dimnames(covars$Salaries) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, years, ])[2:6])\n  }\n  if(is.null(covars$MaxDays)){ \n    covars$MaxDays <- FLQuant(365/dim(fleets[[1]]@effort[, years, ])[4], dim = c(length(fleets),dim(fleets[[1]]@effort[, years, ])[2:6]))\n    dimnames(covars$MaxDays) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, years, ])[2:6])\n  }\n  if(is.null(covars$NumbVessels)){ \n    covars$NumbVessels <- FLQuant(0, dim = c(length(fleets),dim(fleets[[1]]@effort[, years, ])[2:6]))\n    dimnames(covars$NumbVessels) <- c(fleet = list(names(fleets)), dimnames(fleets[[1]]@effort[, years, ])[2:6])\n  }\n  \n  flS <- fltStkSum(obj, flnms = flnms, stknms = stknms, years = years, byyear = byyear, long = long, scenario = scenario)\n  \n  if(byyear == TRUE){\n    if(long == FALSE){\n      for(col in c(6:8,10:12)){\n        for(fl in flnms){\n          for(st in stknms){\n            flS[flS$fleet == fl & flS$stock == st,col] <- flS[flS$fleet == fl & flS$stock == st,col]/c(seasonMeans(covars[['NumbVessels']][fl,years]))\n          }}}\n      res <- flS\n    }\n    else{\n      ids <- c(\"landings\", \"discards\", \"catch\" ,   \"price\",  \"tacshare\",   \"quota\"   )\n      for(id in ids){\n        for(fl in flnms){\n          for(st in stknms){\n            flS[flS$indicator == id & flS$fleet == fl & flS$stock == st, 'value'] <- flS[flS$indicator == id & flS$fleet == fl & flS$stock == st, 'value']/c(seasonMeans(covars[['NumbVessels']][fl,years]))\n      }}}\n  \n      res <- flS\n    }}\n  if(byyear == FALSE){\n    if(long == FALSE){\n      for(col in c(6:8,10:12)){\n        for(fl in flnms){\n          for(st in stknms){\n            for(ss in dimnames(fleets[[fl]]@effort)[[4]]){\n              flS[flS$fleet == fl & flS$stock == st & flS$season == ss,col] <- flS[flS$fleet == fl & flS$stock == st & flS$season == ss,col]/c((covars[['NumbVessels']][fl,years,,ss]))\n          }}}}\n      res <- flS\n    }\n    else{\n      ids <- c(\"landings\", \"discards\", \"catch\" ,   \"price\",  \"tacshare\",   \"quota\"   )\n      for(id in ids){\n        for(fl in flnms){\n          for(st in stknms){\n            for(ss in dimnames(fleets[[fl]]@effort)[[4]]){\n              flS[flS$indicator == id & flS$fleet == fl & flS$stock == st & flS$season == ss, 'value'] <- flS[flS$indicator == id & flS$fleet == fl & flS$stock == st & flS$season == ss, 'value']/c(seasonMeans(covars[['NumbVessels']][fl,years,,ss]))\n          }}}}\n      \n      res <- flS\n    }}\n  \n  return(res) \n  \n}\n\n# vesselStkSumQ \n#' @rdname bioSum\nvesselStkSumQ <- function(obj,  prob = c(0.95,0.5,0.05)){\n  \n  if(dim(obj)[2] < 10){ # the object is in long format\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(value ~ fleet + stock + indicator + year + scenario, obj, quantile, prob = prob,na.rm=T)\n      res <- cbind(res[,1:5], data.frame(res[,6]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[6:(6+length(prob)-1)] <- nms\n    }\n    else{\n      res <- aggregate(value ~ fleet + stock + indicator + year + scenario + season, obj, quantile, prob = prob, na.rm=T)\n      res <- cbind(res[,1:6], data.frame(res[,7]))\n      \n      nms <- paste('q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      names(res)[7:(7+length(prob)-1)] <- nms\n    }\n  }\n  else{\n    \n    if(!('season' %in% names(obj))){\n      res <- aggregate(list(catch = obj$catch,  discards = obj$discards, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price,  quota = obj$quota,       quotaUpt = obj$quotaUpt), \n                       list(fleet = obj$fleet, stock = obj$stock, year = obj$year, scenario = obj$scenario), \n                       quantile, prob = prob, na.rm=T)\n      \n      res <- cbind(res[,1:4], \n                   data.frame(res[,5]),  data.frame(res[,6]),  data.frame(res[,7]),  data.frame(res[,8]),\n                   data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('quota_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms7  <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[-c(1:4)] <- unlist(mget(paste('nms', 1:7, sep=\"\")))\n    }\n    else{\n      res <- aggregate(list(catch = obj$catch, discards = obj$catch, discRat = obj$discRat, landings = obj$landings,       \n                            price = obj$price, quota = obj$quota,    quotaUpt = obj$quotaUpt),                   \n                       list(fleet = obj$fleet, stock = obj$stock, year = obj$year, season = obj$season, scenario = obj$scenario), quantile, prob = prob, na.rm = TRUE)\n      \n      res <- cbind(res[,1:4], \n                   data.frame(res[,5]),  data.frame(res[,6]),   data.frame(res[,7]),  data.frame(res[,8]),\n                   data.frame(res[,9]),  data.frame(res[,10]),  data.frame(res[,11]))\n      \n      nms1  <- paste('catch_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms2  <- paste('discards_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms3  <- paste('discRat_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms4  <- paste('landings_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms5  <- paste('price_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms6  <- paste('quota_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      nms7  <- paste('quotaUpt_q',ifelse(nchar(substr(prob,3, nchar(prob)))==1, paste(substr(prob,3, nchar(prob)), 0, sep = \"\"), substr(prob,3, nchar(prob))), sep = \"\")\n      \n      names(res)[-c(1:4)] <-  unlist(mget(paste('nms', 1:7, sep=\"\")))\n      \n    }\n  }\n  \n  return(res)\n}\n\n\n",
    "created" : 1542294364937.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2058379216",
    "id" : "4EE6A7B6",
    "lastKnownWriteTime" : 1542294465,
    "last_content_update" : 1542294465595,
    "path" : "~/GitHub/FLBEIA/R/Results_Summary.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 17,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}