RefPts[,4] <- rp
flbeiaApp(RefPts=RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ,
years = as.character(2010:2024),
use_npv = FALSE, npv.y0 = NULL, npv.yrs = NULL)
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/results.RData')
load('./output/results_sums.RData')
scnms <- unique(bioQ$scenario)
stknms <- c('ANK', unique(mtStkQ$stock))
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(NA, length(scnms)*6), rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
flbeiaApp(RefPts=RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/results.RData')
load('./output/results_sums.RData')
scnms <- unique(bioQ$scenario)
stknms <- c('ANK', unique(mtStkQ$stock))
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(NA, length(scnms)*6), rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
head(bioQ)
head(fltQ)
fix(fltQ)
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/results_cluster.RData')
load('./output/results_sums_cluster.RData')
scnms <- unique(bioQ$scenario)
stknms <- c('ANK', unique(mtStkQ$stock))
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(NA, length(scnms)*6), rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
flbeiaApp(RefPts=RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/res_cluster.RData')
load('./output/res_sums_cluster.RData')
scnms <- unique(bioQ$scenario)
stknms <- c('ANK', unique(mtStkQ$stock))
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(NA, length(scnms)*6), rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
flbeiaApp(RefPts=RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/res_sums.RData')
load('./output/res_sums_cluster.RData')
scnms <- unique(bioQ$scenario)
stknms <- c('ANK', unique(mtStkQ$stock))
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(NA, length(scnms)*6), rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/06/28
#
#  Run the MIXFISH scenarios.
##------------------------------------------------------------------------##
setwd("~/OneDrive - AZTI/BoB/01_MultiStockHCR")
rm(list = ls())
library(FLBEIA)
library(FLBEIAShiny)
load('./output/res_sums.RData')
load("C:/use/OneDrive - AZTI/BoB/01_MultiStockHCR/output/res_sums.RData")
ls()
head(ADV)
head(BIO)
bioQsum
bioSumQ
aa <- bioSumQ(BIO)
head(BIO)
setwd('c:/use/OneDrive - Azti/BoB/01_MultiStockHCR/output/')
load('./cluster/res_sums_1.RData')
iters <- (1:500)[1:25]
source('~/OneDrive - AZTI/BoB/01_MultiStockHCR/04_Bob_JoinResults_TEST.R', echo=TRUE)
bioQ <- bioSumQ(BIO)
fltQ <- fltSumQ(FLT)
fltStkQ <- fltStkQ(FLTSTK)
mtQ <- mtSumQ(mt)
mtStkQ <- mtStkQ(mt)
head(BIO)
tail(BIO)
Niter
#----------------------------------------------------------------------------------
# Dorleta Garcia
# 2018/09/19
#
# Join results from the cluster simulation
#----------------------------------------------------------------------------------
setwd('c:/use/OneDrive - Azti/BoB/01_MultiStockHCR/output/')
load('./cluster/res_sums_1.RData')
iters <- (1:500)[1:25]
Niter <- length(iters)
FLT <- data.frame(matrix(NA, nrow = dim(fltQ)[1]*Niter, ncol = dim(fltQ)[2],
dimnames = list(NULL, names(fltQ))))
BIO <- data.frame(matrix(NA, nrow = dim(bioQ)[1]*Niter, ncol = dim(bioQ)[2],
dimnames = list(NULL, names(bioQ))))
FLTSTK <- data.frame(matrix(NA, nrow = dim(fltStkQ)[1]*Niter, ncol = dim(fltStkQ)[2],
dimnames = list(NULL, names(fltStkQ))))
MTSTK <- data.frame(matrix(NA, nrow = dim(mtStkQ)[1]*Niter, ncol = dim(mtStkQ)[2],
dimnames = list(NULL, names(mtStkQ))))
MT <- data.frame(matrix(NA, nrow = dim(mtQ)[1]*Niter, ncol = dim(mtQ)[2],
dimnames = list(NULL, names(mtQ))))
ADV <- data.frame(matrix(NA, nrow = dim(advQ)[1]*Niter, ncol = dim(advQ)[2],
dimnames = list(NULL, names(advQ))))
Ke <- Kb <- Ka <- Km <- Kms <- Kfs <-  1
for(j in iters){
load(paste('cluster/res_sums_',j, '.RData', sep =""))
fltQ$scenario <- as.character(fltQ$scenario)
advQ$scenario <- as.character(advQ$scenario)
bioQ$scenario <- as.character(bioQ$scenario)
mtQ$scenario <- as.character(mtQ$scenario)
fltStkQ$scenario <- as.character(fltStkQ$scenario)
mtStkQ$scenario <- as.character(mtStkQ$scenario)
fltQ$year       <- as.numeric(as.character(fltQ$year))
fltQ$fleet      <- as.character(fltQ$fleet)
fltStkQ$fleet   <- as.character(fltStkQ$fleet)
fltStkQ$year    <- as.numeric(as.character(fltStkQ$year))
fltStkQ$stock   <- as.character(fltStkQ$stock)
FLT[Ke:(Ke+dim(fltQ)[1]-1),1:dim(fltQ)[2]] <- fltQ
FLT[Ke:(Ke+dim(fltQ)[1]-1),'iter']        <- j
BIO[Kb:(Kb+dim(bioQ)[1]-1),1:dim(bioQ)[2]] <- bioQ
BIO[Kb:(Kb+dim(bioQ)[1]-1),'iter']        <- j
FLTSTK[Kfs:(Kfs+dim(fltStkQ)[1]-1),1:dim(fltStkQ)[2]] <- fltStkQ
FLTSTK[Kfs:(Kfs+dim(fltStkQ)[1]-1),'iter']           <- j
ADV[Ka:(Ka+dim(advQ)[1]-1),1:dim(advQ)[2]] <- advQ
ADV[Ka:(Ka+dim(advQ)[1]-1),'iter']        <- j
MT[Km:(Km+dim(mtQ)[1]-1),1:dim(mtQ)[2]] <- mtQ
MT[Km:(Km+dim(mtQ)[1]-1),'iter']        <- j
MTSTK[Kms:(Kms+dim(mtStkQ)[1]-1),1:dim(mtStkQ)[2]] <- mtStkQ
MTSTK[Kms:(Kms+dim(mtStkQ)[1]-1),'iter']           <- j
Ke <- Ke + dim(fltQ)[1]
Kb <- Kb + dim(bioQ)[1]
Ka <- Ka + dim(advQ)[1]
Km  <- Km + dim(mtQ)[1]
Kms <- Kms + dim(mtStkQ)[1]
Kfs <- Kfs + dim(fltStkQ)[1]
print(j)
}
names(BIO)[6] <- 'value'
bioQ <- bioSumQ(BIO)
bioSumQ
denug(bioSumQ)
debug(bioSumQ)
names(BIO)[6] <- 'value'
bioQ <- bioSumQ(BIO)
BIO <- BIO[,c(1:5)]
names(BIO)[5] <- 'value'
names(BIO)[6] <- 'value'
bioQ <- bioSumQ(BIO)
head(FLT)
BIO <- BIO[,c(1:5)]
names(BIO)[5] <- 'value'
FLT <- FLT[,c(1:5)]
names(FLT)[5] <- 'value'
FLTSTK <- FLTSTK[,c(1:6)]
names(STK)[6] <- 'value'
FLTSTK <- FLTSTK[,c(1:6)]
names(FLTSTK)[6] <- 'value'
head(FLTSTK)
head(MT)
MT <- MT[,c(1:6)]
names(MT)[6] <- 'value'
MTSTK <- MTSTK[,c(1:7)]
names(MTSTK)[7] <- 'value'
head(ADV)
bioQ <- bioSumQ(BIO)
fltQ <- fltSumQ(FLT)
fltStkQ <- fltStkQ(FLTSTK)
mtQ <- mtSumQ(MT)
undebug(bioSumQ)
bioQ <- bioSumQ(BIO)
fltQ <- fltSumQ(FLT)
fltStkQ <- fltStkQ(FLTSTK)
mtQ <- mtSumQ(MT)
mtStkQ <- mtStkQ(MTSTK)
advQ <- advSumQ(ADV)
bioQ <- bioSumQ(BIO)
fltQ <- fltSumQ(FLT)
fltStkQ <- fltStkSumQ(FLTSTK)
mtQ <- mtSumQ(MT)
mtStkQ <- mtStkSumQ(MTSTK)
advQ <- advSumQ(ADV)
ADV <- ADV[,c(1:5)]
names(ADV)[5] <- 'value'
advQ <- advSumQ(ADV)
library(FLBEIAShiny)
data(FLBEIAShiny)
library(help=FLBEIAShiny)
data(FLBEIAShiny)
data(FLBEIAShiny.RData)
data('FLBEIAShiny.RData')
load("C:/use/FLR/FLBEIA/shiny/FLBEIAShiny/data/beiaS.Rdata")
ls()
library(FLBEIAShiny)
data(beiaS)
library(FLBEIAShiny)
data(beiaS)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
library(devtools)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
library(FLBEIAShiny)
data(beiaS)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
data(beiaS)
?use_data
##------------------------------------------------------------------------##
#  Dorleta Garcia
#  2018/11/10
#
#  RScript to test the shiny application
##------------------------------------------------------------------------##
rm(list = ls())
library(devtools)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
library(FLBEIA)
library(FLBEIAShiny)
load('C:/use/FLR/FLBEIA/shiny/res_shiny.RData' )
scnms <- unique(bioQ$scenario)
stknms <- unique(mtStkQ$stock)
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
rp <- c(rep(c(45000, 0.28, 45000, 32000, 0.62, 0.87), length(scnms)),
rep(c(41800, 0.191, 41800, 37100, 0.45, 0.53), length(scnms)),
rep(c(22278, 0.28, 222278, 16032, 0.36, 0.53), length(scnms)))
RefPts[,4] <- rp
aa <- subset(fltQ, indicator == 'grossValue')
aa$indicator <- 'grossSurplus'
fltQ <- rbind(aa, fltQ)
fltQ[fltQ$indicator == 'grossSurplus', 'q50'] <- runif(length(fltQ[fltQ$indicator == 'grossSurplus', 'indicator']), 9e5,10e7)
fltQ[fltQ$indicator == 'grossValue', 'q50'] <- runif(length(fltQ[fltQ$indicator == 'grossValue', 'indicator']), 9e6,20e7)
fltQ[fltQ$indicator == 'grossSurplus', 'q05'] <- fltQ[fltQ$indicator == 'grossSurplus', 'q50']*0.75
fltQ[fltQ$indicator == 'grossValue', 'q05'] <- fltQ[fltQ$indicator == 'grossSurplus', 'q50']*0.75
fltQ[fltQ$indicator == 'grossSurplus', 'q95'] <- fltQ[fltQ$indicator == 'grossSurplus', 'q50']*1.25
fltQ[fltQ$indicator == 'grossValue', 'q95'] <- fltQ[fltQ$indicator == 'grossSurplus', 'q50']*1.25
# Transform the data to use it as example
bioQ$stock <- ifelse(bioQ$stock == 'HKE', 'Cod', ifelse(bioQ$stock == 'MON', 'Hake', 'Sole'))
fltStkQ$stock <- ifelse(fltStkQ$stock == 'HKE', 'Cod', ifelse(fltStkQ$stock == 'MON', 'Hake', 'Sole'))
advQ$stock <- ifelse(advQ$stock == 'HKE', 'Cod', ifelse(advQ$stock == 'MON', 'Hake', 'Sole'))
mtStkQ$stock <- ifelse(mtStkQ$stock == 'HKE', 'Cod', ifelse(mtStkQ$stock == 'MON', 'Hake', 'Sole'))
RefPts$stock <- ifelse(RefPts$stock == 'HKE', 'Cod', ifelse(RefPts$stock == 'MON', 'Hake', 'Sole'))
risk$unit <- ifelse(risk$unit == 'HKE', 'Cod', ifelse(risk$unit == 'MON', 'Hake', ifelse(risk$unit == 'MEG', 'Sole', risk$unit)))
fltStkQ$fleet <- substr(fltStkQ$fleet,1,3)
mtStkQ$fleet <- substr(mtStkQ$fleet,1,3)
fltQ$fleet <- substr(fltQ$fleet,1,3)
mtQ$fleet <- substr(mtQ$fleet,1,3)
risk$unit <- ifelse(!(risk$unit %in% c("Cod", "Sole", "Hake")), substr(risk$unit,1,3), risk$unit)
fltStkQ$fleet <- ifelse(fltStkQ$fleet %in% c('HKE', 'MON'),'MIS',fltStkQ$fleet)
mtStkQ$fleet <- ifelse(mtStkQ$fleet %in% c('HKE', 'MON'),'MIS',mtStkQ$fleet)
fltQ$fleet <- ifelse(fltQ$fleet %in% c('HKE', 'MON'),'MIS',fltQ$fleet)
mtQ$fleet <- ifelse(mtQ$fleet %in% c('HKE', 'MON'),'MIS',mtQ$fleet)
risk$unit <- ifelse(risk$unit %in% c('HKE', 'MON'),'MIS',risk$unit)
fltQ$fleet    <- ifelse(fltQ$fleet %in% c('OT6', 'OT7', 'OT8'), 'OT8', fltQ$fleet)
mtQ$fleet     <- ifelse(mtQ$fleet %in% c('OT6', 'OT7', 'OT8'), 'OT8', mtQ$fleet)
mtStkQ$fleet  <- ifelse(mtStkQ$fleet %in% c('OT6', 'OT7', 'OT8'), 'OT8', mtStkQ$fleet)
fltStkQ$fleet <- ifelse(fltStkQ$fleet %in% c('OT6', 'OT7', 'OT8'), 'OT8', fltStkQ$fleet)
flt1 <- aggregate(list(q95 = fltQ$q95, q50 = fltQ$q50, q05 = fltQ$q05),
list(fleet = fltQ$fleet, indicator = fltQ$indicator, year = fltQ$year, scenario = fltQ$scenario), sum, na.rm = TRUE)
flt2 <- aggregate(list(q95 = fltQ$q95, q50 = fltQ$q50, q05 = fltQ$q05),
list(fleet = fltQ$fleet,  indicator = fltQ$indicator, year = fltQ$year, scenario = fltQ$scenario), mean, na.rm = TRUE)
fltQ <- rbind(subset(flt2, indicator %in% c('capacity', 'nVessels', 'discRat', 'price', 'quotaUpt')),
subset(flt1, !(indicator %in% c('capacity', 'nVessels', 'discRat', 'price', 'quotaUpt'))))
mt1 <- aggregate(list(q95 = mtQ$q95, q50 = mtQ$q50, q05 = mtQ$q05),
list(fleet = mtQ$fleet, metier = mtQ$metier, indicator = mtQ$indicator, year = mtQ$year, scenario = mtQ$scenario), sum, na.rm = TRUE)
mt2 <- aggregate(list(q95 = mtQ$q95, q50 = mtQ$q50, q05 = mtQ$q05),
list(fleet = mtQ$fleet, metier = mtQ$metier, indicator = mtQ$indicator, year = mtQ$year, scenario = mtQ$scenario), mean, na.rm = TRUE)
mtQ <- rbind(subset(mt2, indicator %in% c('effort')), subset(mt1, !(indicator %in% c('effort'))))
fltStk1 <- aggregate(list(q95 = fltStkQ$q95, q50 = fltStkQ$q50, q05 = fltStkQ$q05),
list(fleet = fltStkQ$fleet, stock = fltStkQ$stock, indicator = fltStkQ$indicator, year = fltStkQ$year, scenario = fltStkQ$scenario), sum, na.rm = TRUE)
fltStk2 <- aggregate(list(q95 = fltStkQ$q95, q50 = fltStkQ$q50, q05 = fltStkQ$q05),
list(fleet = fltStkQ$fleet, stock = fltStkQ$stock, indicator = fltStkQ$indicator, year = fltStkQ$year, scenario = fltStkQ$scenario), mean, na.rm = TRUE)
fltStkQ <- rbind(subset(fltStk2, indicator %in% c('discRat', 'price', 'quotaUpt')),
subset(fltStk1, !(indicator %in% c('discRat', 'price', 'quotaUpt'))))
mtStk1 <- aggregate(list(q95 = mtStkQ$q95, q50 = mtStkQ$q50, q05 = mtStkQ$q05),
list(fleet = mtStkQ$fleet, metier = mtStkQ$metier, stock = mtStkQ$stock, indicator = mtStkQ$indicator, year = mtStkQ$year, scenario = mtStkQ$scenario), sum, na.rm = TRUE)
mtStk2 <- aggregate(list(q95 = mtStkQ$q95, q50 = mtStkQ$q50, q05 = mtStkQ$q05),
list(fleet = mtStkQ$fleet, metier = mtStkQ$metier, stock = mtStkQ$stock, indicator = mtStkQ$indicator, year = mtStkQ$year, scenario = mtStkQ$scenario), mean, na.rm = TRUE)
mtStkQ <- rbind(subset(mtStk2, indicator %in% c('discRat', 'price')),
subset(mtStk1, !(indicator %in% c('discRat', 'price'))))
risk <- aggregate(value ~ year + unit + scenario +  indicator, risk, mean, na.rm = TRUE)
use_data(RefPts, bioQ, fltQ, advQ, fltStk, mtQ, mtStkQ, risk,internal=TRUE)
use_data(RefPts, bioQ, fltQ, advQ, fltStkQ, mtQ, mtStkQ, risk,internal=TRUE)
save(RefPts, bioQ, fltQ, advQ, fltStkQ, mtQ, mtStkQ, risk, file = 'c:/use/FLR/FLBEIA/shiny/FLBEIAShiny/data/FLBEIAShiny.RData')
library(FLBEIAShiny)
library(FLBEIAShiny)
?flbeiaApp
library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64
#----------------------------------------------------------------
# Example with the summary indicators stored in data.frame-s
#----------------------------------------------------------------
data(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
library(FLBEIAShiny)
library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64
#----------------------------------------------------------------
# Example with the summary indicators stored in data.frame-s
#----------------------------------------------------------------
data(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
library(FLBEIAShiny)
library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64
#----------------------------------------------------------------
# Example with the summary indicators stored in data.frame-s
#----------------------------------------------------------------
data(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
library(FLBEIAShiny)
library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64
#----------------------------------------------------------------
# Example with the summary indicators stored in data.frame-s
#----------------------------------------------------------------
data(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
library(FLBEIAShiny)
library(FLBEIAShiny)
library(FLBEIAShiny)          # required to use the IcesHCR. Not available for win64
#----------------------------------------------------------------
# Example with the summary indicators stored in data.frame-s
#----------------------------------------------------------------
data(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
#----------------------------------------------------------------
# Run FLBEIA first and then use the output to launch flbeiaApp.
# In this case we use the output of FLBEIA directly.
#----------------------------------------------------------------
library(FLBEIA)
data(oneIt)
one_sc1 <- FLBEIA(biols = oneItBio,
SRs = oneItSR,
BDs = NULL,
fleets = oneItFl,
covars = oneItCv,
indices = NULL,
advice = oneItAdv,
main.ctrl = oneItMainC,
biols.ctrl = oneItBioC,
fleets.ctrl = oneItFlC,
covars.ctrl = oneItCvC,
obs.ctrl = oneItObsC,
assess.ctrl = oneItAssC,
advice.ctrl = oneItAdvC)
# We change the target reference point in HCR and run a second scenario
oneItAdvC$stk1$ref.pts['Fmsy',] <- 0.2
one_sc2 <- FLBEIA(biols = oneItBio,
SRs = oneItSR,
BDs = NULL,
fleets = oneItFl,
covars = oneItCv,
indices = NULL,
advice = oneItAdv,
main.ctrl = oneItMainC,
biols.ctrl = oneItBioC,
fleets.ctrl = oneItFlC,
covars.ctrl = oneItCvC,
obs.ctrl = oneItObsC,
assess.ctrl = oneItAssC,
advice.ctrl = oneItAdvC)
scnms <- c('Ftarget_Fmsy', 'Ftarget_0.15')
stknms <- 'stk1'
RefPts <- expand.grid(indicator=c("Bmsy", "Fmsy", "Bpa", "Blim", "Fpa", "Flim"), scenario=scnms, stock=stknms, value=NA)[,c(3,2,1,4)]
RefPts$value <- c(c(800, 0.11, 800, 550, 0.25, 0.50),  c(800, 0.2, 800, 550, 0.25, 0.50))
flbeiaObjs <- list(Ftarget_Fmsy = one_sc1, Ftarget_0.15 = one_sc2)
flbeiaApp(flbeiaObjs = flbeiaObjs, years = ac(2000:2025), calculate_npv = TRUE, npv.y0 = '2012', npv.yrs = ac(2013:2025))
library(FLBEIAShiny)
data(FLBEIAShiny)
RefPts
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
dataK
dataK()
head(data)
data[data$year>=input$rangeK[1] & data$year<=input$rangeK[2]
& data$unit%in%input$stockK
& data$scenario%in%input$scenarioK,]
debug(plotKobe)
debug(plotKobe)
kobePhase(dataK())+
geom_point(aes(stock,harvest, group=unit, col=scenario))+
geom_text(data=dataK(),aes(stock,harvest, col=scenario, group=unit, label=year))+
geom_path(aes(stock, harvest, group=unit, col=scenario), data=dataK())+
facet_wrap(~unit)+
theme(text=element_text(size=16),
title=element_text(size=16),
strip.text=element_text(size=16))
observe(dataK())
observe(print(dataK())
)
observe(print(data())
)
library(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
library(devtools)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
çQ
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
install('c:/use/FLR/FLBEIA/shiny/FLBEIAShiny')
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
input$stockK
debug(flbeiaApp)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
data
data
head(data)
input
input$stockK
data
reference_points$stock
uniqueQ
source('~/FLR/FLBEIA/shiny/FLBEIAShiny/inst/flbeiaApp/ui_files/PAGE_simul_stocks.r', echo=TRUE)
library(FLBEIAShiny)
flbeiaApp(RefPts = RefPts,bio = bioQ, flt = fltQ, adv = advQ,
fltStk = fltStkQ, mt = mtQ, mtStk = mtStkQ, risk = risk,
years = as.character(2010:2024),
calculate_npv = FALSE, npv =  NULL, npv.y0 = NULL, npv.yrs = NULL)
library(FLBEIAShiny)
